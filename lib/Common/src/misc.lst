   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.code	16
  12              		.file	"misc.c"
  20              	.Ltext0:
  21              		.cfi_sections	.debug_frame
  22              		.section	.text.__NOP,"ax",%progbits
  23              		.align	2
  24              		.global	__NOP
  25              		.code	16
  26              		.thumb_func
  28              	__NOP:
  29              	.LFB0:
  30              		.file 1 "lib/Common/src/misc.c"
   1:lib/Common/src/misc.c **** /********************************************************************************
   2:lib/Common/src/misc.c **** * File Name          : misc.h
   3:lib/Common/src/misc.c **** * Author             : Nemui Trinomius (http://nemuisan.blog.bai.ne.jp)
   4:lib/Common/src/misc.c **** * Version            : V3.00
   5:lib/Common/src/misc.c **** * Since              : 2009.05.14
   6:lib/Common/src/misc.c **** * Description        : miscellaneous routine for LPC23xx uC.
   7:lib/Common/src/misc.c **** *
   8:lib/Common/src/misc.c **** *                    : 2009.05.14  V1.00    Prelimnary version, first Release.
   9:lib/Common/src/misc.c **** *                    : 2009.06.29  V2.00    added systick timer using timer1.
  10:lib/Common/src/misc.c **** *					 : 2009.07.22  V3.00    added FreeRTOS support.
  11:lib/Common/src/misc.c **** * License			 : BSD License. See Copyright.txt
  12:lib/Common/src/misc.c **** ********************************************************************************/
  13:lib/Common/src/misc.c **** 
  14:lib/Common/src/misc.c **** /*-----------------------------------------
  15:lib/Common/src/misc.c **** 				includes
  16:lib/Common/src/misc.c **** -------------------------------------------*/
  17:lib/Common/src/misc.c **** #include "misc.h"
  18:lib/Common/src/misc.c **** /* check header file version for fool proof */
  19:lib/Common/src/misc.c **** #if __MISC_H != 0x0003
  20:lib/Common/src/misc.c **** #error "header file version is not correspond!"
  21:lib/Common/src/misc.c **** #endif
  22:lib/Common/src/misc.c **** 
  23:lib/Common/src/misc.c **** /*-----------------------------------------
  24:lib/Common/src/misc.c **** 		   Common Basis Functions
  25:lib/Common/src/misc.c **** -------------------------------------------*/
  26:lib/Common/src/misc.c **** inline void __NOP(void)
  27:lib/Common/src/misc.c **** {
  31              		.loc 1 27 0
  32              		.cfi_startproc
  28:lib/Common/src/misc.c **** 	__asm__ __volatile__("nop"); 
  33              		.loc 1 28 0
  34              	@ 28 "lib/Common/src/misc.c" 1
  35 0000 C046     		nop
  36              	@ 0 "" 2
  29:lib/Common/src/misc.c **** }
  37              		.loc 1 29 0
  38              		.code	16
  39              		@ sp needed for prologue
  40 0002 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE0:
  44              		.section	.text.time_waste,"ax",%progbits
  45              		.align	2
  46              		.global	time_waste
  47              		.code	16
  48              		.thumb_func
  50              	time_waste:
  51              	.LFB1:
  30:lib/Common/src/misc.c **** 
  31:lib/Common/src/misc.c **** void time_waste(volatile uint32_t dv)
  32:lib/Common/src/misc.c **** {
  52              		.loc 1 32 0
  53              		.cfi_startproc
  54 0000 00B5     		push	{lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 14, -4
  58              	.LVL0:
  59 0002 85B0     		sub	sp, sp, #20
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 24
  62              		.loc 1 32 0
  63 0004 0190     		str	r0, [sp, #4]
  33:lib/Common/src/misc.c **** 	volatile uint32_t cnt;
  34:lib/Common/src/misc.c **** 	for (cnt=0; cnt<dv ; cnt++ ) { ; }
  64              		.loc 1 34 0
  65 0006 0020     		mov	r0, #0
  66              	.LVL1:
  67 0008 0390     		str	r0, [sp, #12]
  68              	.LVL2:
  69 000a 039A     		ldr	r2, [sp, #12]
  70 000c 019B     		ldr	r3, [sp, #4]
  71 000e 9A42     		cmp	r2, r3
  72 0010 06D2     		bcs	.L2
  73              	.L5:
  74              		.loc 1 34 0 is_stmt 0 discriminator 2
  75 0012 039A     		ldr	r2, [sp, #12]
  76 0014 0132     		add	r2, r2, #1
  77              	.LVL3:
  78 0016 0392     		str	r2, [sp, #12]
  79              	.LVL4:
  80 0018 0399     		ldr	r1, [sp, #12]
  81 001a 019B     		ldr	r3, [sp, #4]
  82 001c 9942     		cmp	r1, r3
  83 001e F8D3     		bcc	.L5
  84              	.L2:
  35:lib/Common/src/misc.c **** }
  85              		.loc 1 35 0 is_stmt 1
  86 0020 05B0     		add	sp, sp, #20
  87              		@ sp needed for prologue
  88 0022 01BC     		pop	{r0}
  89 0024 0047     		bx	r0
  90              		.cfi_endproc
  91              	.LFE1:
  93 0026 C046     		.section	.text._delay_us,"ax",%progbits
  94              		.align	2
  95              		.global	_delay_us
  96              		.code	16
  97              		.thumb_func
  99              	_delay_us:
 100              	.LFB2:
  36:lib/Common/src/misc.c **** 
  37:lib/Common/src/misc.c **** void _delay_us(volatile uint32_t us)
  38:lib/Common/src/misc.c **** {
 101              		.loc 1 38 0
 102              		.cfi_startproc
 103 0000 00B5     		push	{lr}
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 14, -4
 107              	.LVL5:
 108 0002 83B0     		sub	sp, sp, #12
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 16
 111 0004 0190     		str	r0, [sp, #4]
 112 0006 05E0     		b	.L13
 113              	.LVL6:
 114              	.L14:
 115              	.LBB14:
 116              	.LBB15:
  28:lib/Common/src/misc.c **** 	__asm__ __volatile__("nop"); 
 117              		.loc 1 28 0
 118              	@ 28 "lib/Common/src/misc.c" 1
 119 0008 C046     		nop
 120              	@ 0 "" 2
 121              		.code	16
 122              	.LBE15:
 123              	.LBE14:
 124              	.LBB16:
 125              	.LBB17:
 126              	@ 28 "lib/Common/src/misc.c" 1
 127 000a C046     		nop
 128              	@ 0 "" 2
 129              		.code	16
 130              	.LBE17:
 131              	.LBE16:
 132              	.LBB18:
 133              	.LBB19:
 134              	@ 28 "lib/Common/src/misc.c" 1
 135 000c C046     		nop
 136              	@ 0 "" 2
 137              		.code	16
 138              	.LBE19:
 139              	.LBE18:
 140              	.LBB20:
 141              	.LBB21:
 142              	@ 28 "lib/Common/src/misc.c" 1
 143 000e C046     		nop
 144              	@ 0 "" 2
 145              		.code	16
 146              	.LBE21:
 147              	.LBE20:
 148              	.LBB22:
 149              	.LBB23:
 150              	@ 28 "lib/Common/src/misc.c" 1
 151 0010 C046     		nop
 152              	@ 0 "" 2
 153              		.code	16
 154              	.LBE23:
 155              	.LBE22:
 156              	.LBB24:
 157              	.LBB25:
 158              	@ 28 "lib/Common/src/misc.c" 1
 159 0012 C046     		nop
 160              	@ 0 "" 2
 161              		.code	16
 162              	.L13:
 163              	.LBE25:
 164              	.LBE24:
  39:lib/Common/src/misc.c **** 	while(--us) { __NOP();__NOP();__NOP();__NOP();__NOP();__NOP();}
 165              		.loc 1 39 0
 166 0014 0198     		ldr	r0, [sp, #4]
 167 0016 0138     		sub	r0, r0, #1
 168 0018 0190     		str	r0, [sp, #4]
 169 001a 019B     		ldr	r3, [sp, #4]
 170 001c 002B     		cmp	r3, #0
 171 001e F3D1     		bne	.L14
  40:lib/Common/src/misc.c **** }
 172              		.loc 1 40 0
 173 0020 03B0     		add	sp, sp, #12
 174              		@ sp needed for prologue
 175 0022 01BC     		pop	{r0}
 176 0024 0047     		bx	r0
 177              		.cfi_endproc
 178              	.LFE2:
 180 0026 C046     		.section	.text.dump,"ax",%progbits
 181              		.align	2
 182              		.global	dump
 183              		.code	16
 184              		.thumb_func
 186              	dump:
 187              	.LFB3:
  41:lib/Common/src/misc.c **** 
  42:lib/Common/src/misc.c **** /*-----------------------------------------
  43:lib/Common/src/misc.c **** 		Bare-Metal Only Functions
  44:lib/Common/src/misc.c **** -------------------------------------------*/
  45:lib/Common/src/misc.c **** #ifndef INC_FREERTOS_H
  46:lib/Common/src/misc.c **** void _delay_ms(volatile uint32_t dv)
  47:lib/Common/src/misc.c **** {
  48:lib/Common/src/misc.c **** 	waiter = dv;
  49:lib/Common/src/misc.c **** 	/* reset_timer(TIMER_1); */
  50:lib/Common/src/misc.c **** 	enable_timer(TIMER_1);
  51:lib/Common/src/misc.c **** 	while(waiter);
  52:lib/Common/src/misc.c **** 	disable_timer(TIMER_1);
  53:lib/Common/src/misc.c **** }
  54:lib/Common/src/misc.c **** 
  55:lib/Common/src/misc.c **** void init_delay()
  56:lib/Common/src/misc.c **** {
  57:lib/Common/src/misc.c **** 	init_timer(TIMER_1,DELAY_MSEC);
  58:lib/Common/src/misc.c **** }
  59:lib/Common/src/misc.c **** #endif
  60:lib/Common/src/misc.c **** 
  61:lib/Common/src/misc.c **** /*-----------------------------------------
  62:lib/Common/src/misc.c **** 		Support Functions via STDIO
  63:lib/Common/src/misc.c **** -------------------------------------------*/
  64:lib/Common/src/misc.c **** void dump(uint32_t adr,uint32_t size)
  65:lib/Common/src/misc.c **** {
 188              		.loc 1 65 0
 189              		.cfi_startproc
 190 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 191              	.LCFI4:
 192              		.cfi_def_cfa_offset 20
 193              		.cfi_offset 4, -20
 194              		.cfi_offset 5, -16
 195              		.cfi_offset 6, -12
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 5F46     		mov	r7, fp
 199 0004 5646     		mov	r6, sl
 200 0006 4D46     		mov	r5, r9
 201 0008 4446     		mov	r4, r8
 202 000a F0B4     		push	{r4, r5, r6, r7}
 203              	.LCFI5:
 204              		.cfi_def_cfa_offset 36
 205              		.cfi_offset 8, -36
 206              		.cfi_offset 9, -32
 207              		.cfi_offset 10, -28
 208              		.cfi_offset 11, -24
 209              	.LVL7:
 210 000c 87B0     		sub	sp, sp, #28
 211              	.LCFI6:
 212              		.cfi_def_cfa_offset 64
  66:lib/Common/src/misc.c **** 	uint8_t *ad,data[16];
  67:lib/Common/src/misc.c **** 	int	i,j,k;
  68:lib/Common/src/misc.c **** 
  69:lib/Common/src/misc.c **** 	(size%16)?(k=size/16+1):(k=size/16);
 213              		.loc 1 69 0
 214 000e 0A09     		lsr	r2, r1, #4
  65:lib/Common/src/misc.c **** {
 215              		.loc 1 65 0
 216 0010 041C     		mov	r4, r0
 217              		.loc 1 69 0
 218 0012 0192     		str	r2, [sp, #4]
 219 0014 0B07     		lsl	r3, r1, #28
 220 0016 01D0     		beq	.L17
 221              		.loc 1 69 0 is_stmt 0 discriminator 1
 222 0018 0132     		add	r2, r2, #1
 223 001a 0192     		str	r2, [sp, #4]
 224              	.LVL8:
 225              	.L17:
  70:lib/Common/src/misc.c **** 	DBG_print("\n");
 226              		.loc 1 70 0 is_stmt 1
 227 001c 0A20     		mov	r0, #10
 228              	.LVL9:
 229 001e FFF7FEFF 		bl	putchar
 230              	.LVL10:
  71:lib/Common/src/misc.c **** 	for(j=0,ad=(uint8_t*)adr;j<k;j++){
 231              		.loc 1 71 0
 232 0022 019A     		ldr	r2, [sp, #4]
 233 0024 002A     		cmp	r2, #0
 234 0026 00DC     		bgt	.LCB134
 235 0028 F9E0     		b	.L15	@long jump
 236              	.LCB134:
 237 002a 0023     		mov	r3, #0
 238 002c B94A     		ldr	r2, .L92
 239 002e 0093     		str	r3, [sp]
  64:lib/Common/src/misc.c **** void dump(uint32_t adr,uint32_t size)
 240              		.loc 1 64 0
 241 0030 1833     		add	r3, r3, #24
 242              		.loc 1 71 0
 243 0032 A046     		mov	r8, r4
 244 0034 9146     		mov	r9, r2
  64:lib/Common/src/misc.c **** void dump(uint32_t adr,uint32_t size)
 245              		.loc 1 64 0
 246 0036 6B44     		add	r3, r3, sp
  72:lib/Common/src/misc.c **** 		DBG_print("%08X",(unsigned int)ad);
  73:lib/Common/src/misc.c **** 		for(i=0;i<16;i++,ad++)
  74:lib/Common/src/misc.c **** 			DBG_print(" %02X",data[i]=*ad);
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
  76:lib/Common/src/misc.c **** 		for(i=0;i<16;i++){
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 247              		.loc 1 77 0
 248 0038 2E22     		mov	r2, #46
 249 003a B74C     		ldr	r4, .L92+4
 250              	.LVL11:
 251 003c 02AF     		add	r7, sp, #8
  64:lib/Common/src/misc.c **** void dump(uint32_t adr,uint32_t size)
 252              		.loc 1 64 0
 253 003e 9A46     		mov	sl, r3
 254              		.loc 1 77 0
 255 0040 9346     		mov	fp, r2
 256              	.LVL12:
 257              	.L33:
  72:lib/Common/src/misc.c **** 		DBG_print("%08X",(unsigned int)ad);
 258              		.loc 1 72 0
 259 0042 4146     		mov	r1, r8
 260 0044 B548     		ldr	r0, .L92+8
 261 0046 FFF7FEFF 		bl	printf
 262              	.LVL13:
  74:lib/Common/src/misc.c **** 			DBG_print(" %02X",data[i]=*ad);
 263              		.loc 1 74 0
 264 004a 4346     		mov	r3, r8
 265 004c 1978     		ldrb	r1, [r3]
 266 004e 4846     		mov	r0, r9
 267 0050 3970     		strb	r1, [r7]
 268 0052 FFF7FEFF 		bl	printf
 269              	.LVL14:
 270 0056 4246     		mov	r2, r8
 271 0058 5178     		ldrb	r1, [r2, #1]
 272 005a 4846     		mov	r0, r9
 273 005c 7970     		strb	r1, [r7, #1]
 274 005e FFF7FEFF 		bl	printf
 275              	.LVL15:
 276 0062 4346     		mov	r3, r8
 277 0064 9978     		ldrb	r1, [r3, #2]
 278 0066 4846     		mov	r0, r9
 279 0068 B970     		strb	r1, [r7, #2]
 280 006a FFF7FEFF 		bl	printf
 281              	.LVL16:
 282 006e 4246     		mov	r2, r8
 283 0070 D178     		ldrb	r1, [r2, #3]
 284 0072 4846     		mov	r0, r9
 285 0074 F970     		strb	r1, [r7, #3]
 286 0076 FFF7FEFF 		bl	printf
 287              	.LVL17:
 288 007a 4346     		mov	r3, r8
 289 007c 1979     		ldrb	r1, [r3, #4]
 290 007e 4846     		mov	r0, r9
 291 0080 3971     		strb	r1, [r7, #4]
 292 0082 FFF7FEFF 		bl	printf
 293              	.LVL18:
 294 0086 4246     		mov	r2, r8
 295 0088 5179     		ldrb	r1, [r2, #5]
 296 008a 4846     		mov	r0, r9
 297 008c 7971     		strb	r1, [r7, #5]
 298 008e FFF7FEFF 		bl	printf
 299              	.LVL19:
 300 0092 4346     		mov	r3, r8
 301 0094 9979     		ldrb	r1, [r3, #6]
 302 0096 4846     		mov	r0, r9
 303 0098 B971     		strb	r1, [r7, #6]
 304 009a FFF7FEFF 		bl	printf
 305              	.LVL20:
 306 009e 4246     		mov	r2, r8
 307 00a0 D179     		ldrb	r1, [r2, #7]
 308 00a2 4846     		mov	r0, r9
 309 00a4 F971     		strb	r1, [r7, #7]
 310 00a6 FFF7FEFF 		bl	printf
 311              	.LVL21:
 312 00aa 4346     		mov	r3, r8
 313 00ac 197A     		ldrb	r1, [r3, #8]
 314 00ae 4846     		mov	r0, r9
 315 00b0 3972     		strb	r1, [r7, #8]
 316 00b2 FFF7FEFF 		bl	printf
 317              	.LVL22:
 318 00b6 4246     		mov	r2, r8
 319 00b8 517A     		ldrb	r1, [r2, #9]
 320 00ba 4846     		mov	r0, r9
 321 00bc 7972     		strb	r1, [r7, #9]
 322 00be FFF7FEFF 		bl	printf
 323              	.LVL23:
 324 00c2 4346     		mov	r3, r8
 325 00c4 997A     		ldrb	r1, [r3, #10]
 326 00c6 4846     		mov	r0, r9
 327 00c8 B972     		strb	r1, [r7, #10]
 328 00ca FFF7FEFF 		bl	printf
 329              	.LVL24:
 330 00ce 4246     		mov	r2, r8
 331 00d0 D17A     		ldrb	r1, [r2, #11]
 332 00d2 4846     		mov	r0, r9
 333 00d4 F972     		strb	r1, [r7, #11]
 334 00d6 FFF7FEFF 		bl	printf
 335              	.LVL25:
 336 00da 4346     		mov	r3, r8
 337 00dc 197B     		ldrb	r1, [r3, #12]
 338 00de 4846     		mov	r0, r9
 339 00e0 3973     		strb	r1, [r7, #12]
 340 00e2 FFF7FEFF 		bl	printf
 341              	.LVL26:
 342 00e6 4246     		mov	r2, r8
 343 00e8 517B     		ldrb	r1, [r2, #13]
 344 00ea 4846     		mov	r0, r9
 345 00ec 7973     		strb	r1, [r7, #13]
 346 00ee FFF7FEFF 		bl	printf
 347              	.LVL27:
 348 00f2 4346     		mov	r3, r8
 349 00f4 997B     		ldrb	r1, [r3, #14]
 350 00f6 4846     		mov	r0, r9
 351 00f8 B973     		strb	r1, [r7, #14]
 352 00fa FFF7FEFF 		bl	printf
 353              	.LVL28:
 354 00fe 4246     		mov	r2, r8
 355 0100 D17B     		ldrb	r1, [r2, #15]
 356 0102 4846     		mov	r0, r9
 357 0104 F973     		strb	r1, [r7, #15]
 358 0106 FFF7FEFF 		bl	printf
 359              	.LVL29:
 360 010a 1020     		mov	r0, #16
 361 010c 8044     		add	r8, r8, r0
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 362              		.loc 1 75 0
 363 010e 2068     		ldr	r0, [r4]
 364 0110 8268     		ldr	r2, [r0, #8]
 365 0112 9368     		ldr	r3, [r2, #8]
 366 0114 013B     		sub	r3, r3, #1
 367 0116 9360     		str	r3, [r2, #8]
 368 0118 002B     		cmp	r3, #0
 369 011a 00DA     		bge	.LCB280
 370 011c C4E0     		b	.L84	@long jump
 371              	.LCB280:
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 372              		.loc 1 75 0 is_stmt 0 discriminator 2
 373 011e 1268     		ldr	r2, [r2]
 374 0120 2020     		mov	r0, #32
 375 0122 1070     		strb	r0, [r2]
 376 0124 2068     		ldr	r0, [r4]
 377 0126 8268     		ldr	r2, [r0, #8]
 378 0128 1168     		ldr	r1, [r2]
 379 012a 0131     		add	r1, r1, #1
 380 012c 1160     		str	r1, [r2]
 381              	.L23:
 382              	.LVL30:
 383 012e 0123     		mov	r3, #1
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 384              		.loc 1 75 0 discriminator 1
 385 0130 3D1C     		mov	r5, r7
 386 0132 BB43     		bic	r3, r7
 387 0134 40D0     		beq	.L22
 388              		.loc 1 77 0 is_stmt 1
 389 0136 3978     		ldrb	r1, [r7]
 390 0138 0B1C     		mov	r3, r1
 391 013a 203B     		sub	r3, r3, #32
 392 013c 1D06     		lsl	r5, r3, #24
 393 013e 2E0E     		lsr	r6, r5, #24
 394 0140 5F2E     		cmp	r6, #95
 395 0142 00D8     		bhi	.LCB305
 396 0144 A0E0     		b	.L54	@long jump
 397              	.LCB305:
 398 0146 9368     		ldr	r3, [r2, #8]
 399 0148 013B     		sub	r3, r3, #1
 400 014a 9360     		str	r3, [r2, #8]
 401 014c 002B     		cmp	r3, #0
 402 014e 00DA     		bge	.LCB310
 403 0150 C7E0     		b	.L55	@long jump
 404              	.LCB310:
 405 0152 1268     		ldr	r2, [r2]
 406 0154 5846     		mov	r0, fp
 407 0156 1070     		strb	r0, [r2]
 408              	.L74:
 409 0158 2168     		ldr	r1, [r4]
 410 015a 8A68     		ldr	r2, [r1, #8]
 411 015c 1068     		ldr	r0, [r2]
 412 015e 0130     		add	r0, r0, #1
 413 0160 1060     		str	r0, [r2]
 414              	.L56:
 415              	.LVL31:
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 416              		.loc 1 75 0
 417 0162 2068     		ldr	r0, [r4]
 418              		.loc 1 77 0
 419 0164 7D1C     		add	r5, r7, #1
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 420              		.loc 1 75 0
 421 0166 8268     		ldr	r2, [r0, #8]
 422 0168 26E0     		b	.L22
 423              	.L87:
 424              		.loc 1 77 0 discriminator 1
 425 016a 9368     		ldr	r3, [r2, #8]
 426 016c 013B     		sub	r3, r3, #1
 427 016e 9360     		str	r3, [r2, #8]
 428 0170 002B     		cmp	r3, #0
 429 0172 3ADB     		blt	.L85
 430              		.loc 1 77 0 is_stmt 0 discriminator 2
 431 0174 1268     		ldr	r2, [r2]
 432 0176 1170     		strb	r1, [r2]
 433              	.L73:
 434 0178 2368     		ldr	r3, [r4]
 435 017a 9E68     		ldr	r6, [r3, #8]
 436 017c 3168     		ldr	r1, [r6]
 437 017e 0131     		add	r1, r1, #1
 438 0180 3160     		str	r1, [r6]
 439              	.L28:
 440              		.loc 1 77 0
 441 0182 6E1C     		add	r6, r5, #1
  76:lib/Common/src/misc.c **** 		for(i=0;i<16;i++){
 442              		.loc 1 76 0 is_stmt 1
 443 0184 B245     		cmp	sl, r6
 444 0186 40D0     		beq	.L86
 445              	.L32:
 446              		.loc 1 77 0
 447 0188 6978     		ldrb	r1, [r5, #1]
 448 018a 0D1C     		mov	r5, r1
 449 018c 203D     		sub	r5, r5, #32
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 450              		.loc 1 75 0
 451 018e 2068     		ldr	r0, [r4]
 452              		.loc 1 77 0
 453 0190 2B06     		lsl	r3, r5, #24
 454 0192 1D0E     		lsr	r5, r3, #24
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 455              		.loc 1 75 0
 456 0194 8268     		ldr	r2, [r0, #8]
 457              		.loc 1 77 0
 458 0196 5F2D     		cmp	r5, #95
 459 0198 1ED8     		bhi	.L44
 460 019a 9368     		ldr	r3, [r2, #8]
 461 019c 013B     		sub	r3, r3, #1
 462 019e 9360     		str	r3, [r2, #8]
 463 01a0 002B     		cmp	r3, #0
 464 01a2 63DB     		blt	.L66
 465 01a4 1068     		ldr	r0, [r2]
 466 01a6 0170     		strb	r1, [r0]
 467              	.L76:
 468 01a8 2268     		ldr	r2, [r4]
 469 01aa 9368     		ldr	r3, [r2, #8]
 470 01ac 1968     		ldr	r1, [r3]
 471 01ae 0131     		add	r1, r1, #1
 472 01b0 1960     		str	r1, [r3]
 473              	.L63:
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 474              		.loc 1 75 0
 475 01b2 2068     		ldr	r0, [r4]
 476 01b4 8268     		ldr	r2, [r0, #8]
 477              		.loc 1 77 0
 478 01b6 751C     		add	r5, r6, #1
 479              	.L22:
 480 01b8 2978     		ldrb	r1, [r5]
 481 01ba 0E1C     		mov	r6, r1
 482 01bc 203E     		sub	r6, r6, #32
 483 01be 3306     		lsl	r3, r6, #24
 484 01c0 1E0E     		lsr	r6, r3, #24
 485 01c2 5F2E     		cmp	r6, #95
 486 01c4 D1D9     		bls	.L87
 487              		.loc 1 77 0 is_stmt 0 discriminator 2
 488 01c6 9368     		ldr	r3, [r2, #8]
 489 01c8 013B     		sub	r3, r3, #1
 490 01ca 9360     		str	r3, [r2, #8]
 491 01cc 002B     		cmp	r3, #0
 492 01ce 2FDB     		blt	.L88
 493 01d0 1268     		ldr	r2, [r2]
 494 01d2 5846     		mov	r0, fp
 495 01d4 1070     		strb	r0, [r2]
 496 01d6 CFE7     		b	.L73
 497              	.L44:
 498              		.loc 1 77 0
 499 01d8 9368     		ldr	r3, [r2, #8]
 500 01da 013B     		sub	r3, r3, #1
 501 01dc 9360     		str	r3, [r2, #8]
 502 01de 002B     		cmp	r3, #0
 503 01e0 35DB     		blt	.L62
 504 01e2 1368     		ldr	r3, [r2]
 505 01e4 5846     		mov	r0, fp
 506 01e6 1870     		strb	r0, [r3]
 507 01e8 DEE7     		b	.L76
 508              	.L85:
 509              		.loc 1 77 0 discriminator 1
 510 01ea 9669     		ldr	r6, [r2, #24]
 511 01ec B342     		cmp	r3, r6
 512 01ee 2BDB     		blt	.L71
 513              		.loc 1 77 0 discriminator 3
 514 01f0 1068     		ldr	r0, [r2]
 515 01f2 0170     		strb	r1, [r0]
 516 01f4 2068     		ldr	r0, [r4]
 517 01f6 8268     		ldr	r2, [r0, #8]
 518 01f8 1368     		ldr	r3, [r2]
 519 01fa 1978     		ldrb	r1, [r3]
 520 01fc 0A29     		cmp	r1, #10
 521 01fe 23D0     		beq	.L71
 522              	.L89:
 523              		.loc 1 77 0 discriminator 5
 524 0200 0133     		add	r3, r3, #1
 525 0202 6E1C     		add	r6, r5, #1
 526 0204 1360     		str	r3, [r2]
  76:lib/Common/src/misc.c **** 		for(i=0;i<16;i++){
 527              		.loc 1 76 0 is_stmt 1 discriminator 5
 528 0206 B245     		cmp	sl, r6
 529 0208 BED1     		bne	.L32
 530              	.L86:
  78:lib/Common/src/misc.c **** 		}
  79:lib/Common/src/misc.c ****         DBG_print("\n");
 531              		.loc 1 79 0
 532 020a 0A20     		mov	r0, #10
 533 020c FFF7FEFF 		bl	putchar
  71:lib/Common/src/misc.c **** 	for(j=0,ad=(uint8_t*)adr;j<k;j++){
 534              		.loc 1 71 0
 535 0210 009B     		ldr	r3, [sp]
 536 0212 019D     		ldr	r5, [sp, #4]
 537 0214 0133     		add	r3, r3, #1
 538 0216 0093     		str	r3, [sp]
 539              	.LVL32:
 540 0218 9D42     		cmp	r5, r3
 541 021a 00DD     		ble	.LCB443
 542 021c 11E7     		b	.L33	@long jump
 543              	.LCB443:
 544              	.LVL33:
 545              	.L15:
  80:lib/Common/src/misc.c **** 	}
  81:lib/Common/src/misc.c **** }
 546              		.loc 1 81 0
 547 021e 07B0     		add	sp, sp, #28
 548              		@ sp needed for prologue
 549 0220 3CBC     		pop	{r2, r3, r4, r5}
 550 0222 9046     		mov	r8, r2
 551 0224 9946     		mov	r9, r3
 552 0226 A246     		mov	sl, r4
 553 0228 AB46     		mov	fp, r5
 554 022a F0BC     		pop	{r4, r5, r6, r7}
 555 022c 01BC     		pop	{r0}
 556 022e 0047     		bx	r0
 557              	.L88:
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 558              		.loc 1 77 0 discriminator 1
 559 0230 9169     		ldr	r1, [r2, #24]
 560 0232 8B42     		cmp	r3, r1
 561 0234 30DB     		blt	.L30
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 562              		.loc 1 77 0 is_stmt 0 discriminator 3
 563 0236 1368     		ldr	r3, [r2]
 564 0238 5E46     		mov	r6, fp
 565 023a 1E70     		strb	r6, [r3]
 566 023c 2068     		ldr	r0, [r4]
 567 023e 8268     		ldr	r2, [r0, #8]
 568 0240 1368     		ldr	r3, [r2]
 569 0242 1978     		ldrb	r1, [r3]
 570 0244 0A29     		cmp	r1, #10
 571 0246 DBD1     		bne	.L89
 572              	.L71:
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 573              		.loc 1 77 0 discriminator 4
 574 0248 FFF7FEFF 		bl	__swbuf_r
 575 024c 99E7     		b	.L28
 576              	.L62:
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 577              		.loc 1 77 0
 578 024e 9169     		ldr	r1, [r2, #24]
 579 0250 8B42     		cmp	r3, r1
 580 0252 25DB     		blt	.L90
 581 0254 1568     		ldr	r5, [r2]
 582 0256 5A46     		mov	r2, fp
 583 0258 2A70     		strb	r2, [r5]
 584 025a 2068     		ldr	r0, [r4]
 585 025c 8268     		ldr	r2, [r0, #8]
 586 025e 1368     		ldr	r3, [r2]
 587 0260 1978     		ldrb	r1, [r3]
 588 0262 0A29     		cmp	r1, #10
 589 0264 0DD0     		beq	.L77
 590              	.L68:
 591 0266 0133     		add	r3, r3, #1
 592 0268 1360     		str	r3, [r2]
 593 026a A2E7     		b	.L63
 594              	.L66:
 595 026c 9569     		ldr	r5, [r2, #24]
 596 026e AB42     		cmp	r3, r5
 597 0270 07DB     		blt	.L77
 598 0272 1068     		ldr	r0, [r2]
 599 0274 0170     		strb	r1, [r0]
 600 0276 2068     		ldr	r0, [r4]
 601 0278 8268     		ldr	r2, [r0, #8]
 602 027a 1368     		ldr	r3, [r2]
 603 027c 1978     		ldrb	r1, [r3]
 604 027e 0A29     		cmp	r1, #10
 605 0280 F1D1     		bne	.L68
 606              	.L77:
 607 0282 FFF7FEFF 		bl	__swbuf_r
 608 0286 94E7     		b	.L63
 609              	.LVL34:
 610              	.L54:
 611 0288 9368     		ldr	r3, [r2, #8]
 612 028a 013B     		sub	r3, r3, #1
 613 028c 9360     		str	r3, [r2, #8]
 614 028e 002B     		cmp	r3, #0
 615 0290 19DB     		blt	.L59
 616 0292 1368     		ldr	r3, [r2]
 617 0294 1970     		strb	r1, [r3]
 618 0296 5FE7     		b	.L74
 619              	.LVL35:
 620              	.L30:
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 621              		.loc 1 77 0 discriminator 4
 622 0298 2E21     		mov	r1, #46
 623 029a FFF7FEFF 		bl	__swbuf_r
 624 029e 70E7     		b	.L28
 625              	.L90:
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 626              		.loc 1 77 0
 627 02a0 2E21     		mov	r1, #46
 628 02a2 FFF7FEFF 		bl	__swbuf_r
 629 02a6 84E7     		b	.L63
 630              	.LVL36:
 631              	.L84:
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 632              		.loc 1 75 0 is_stmt 1 discriminator 1
 633 02a8 9169     		ldr	r1, [r2, #24]
 634 02aa 8B42     		cmp	r3, r1
 635 02ac 28DB     		blt	.L20
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 636              		.loc 1 75 0 is_stmt 0 discriminator 3
 637 02ae 1668     		ldr	r6, [r2]
 638 02b0 2025     		mov	r5, #32
 639 02b2 3570     		strb	r5, [r6]
 640 02b4 2068     		ldr	r0, [r4]
 641 02b6 8268     		ldr	r2, [r0, #8]
 642 02b8 1368     		ldr	r3, [r2]
 643 02ba 1978     		ldrb	r1, [r3]
 644 02bc 0A29     		cmp	r1, #10
 645 02be 20D0     		beq	.L70
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 646              		.loc 1 75 0 discriminator 5
 647 02c0 0133     		add	r3, r3, #1
 648 02c2 1360     		str	r3, [r2]
 649 02c4 33E7     		b	.L23
 650              	.LVL37:
 651              	.L59:
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 652              		.loc 1 77 0 is_stmt 1
 653 02c6 9569     		ldr	r5, [r2, #24]
 654 02c8 AB42     		cmp	r3, r5
 655 02ca 16DB     		blt	.L75
 656 02cc 1668     		ldr	r6, [r2]
 657 02ce 3170     		strb	r1, [r6]
 658 02d0 2068     		ldr	r0, [r4]
 659 02d2 8268     		ldr	r2, [r0, #8]
 660 02d4 1368     		ldr	r3, [r2]
 661 02d6 1978     		ldrb	r1, [r3]
 662 02d8 0A29     		cmp	r1, #10
 663 02da 0ED0     		beq	.L75
 664              	.L61:
 665 02dc 0133     		add	r3, r3, #1
 666 02de 1360     		str	r3, [r2]
 667 02e0 3FE7     		b	.L56
 668              	.L55:
 669 02e2 9169     		ldr	r1, [r2, #24]
 670 02e4 8B42     		cmp	r3, r1
 671 02e6 11DB     		blt	.L91
 672 02e8 1568     		ldr	r5, [r2]
 673 02ea 5E46     		mov	r6, fp
 674 02ec 2E70     		strb	r6, [r5]
 675 02ee 2068     		ldr	r0, [r4]
 676 02f0 8268     		ldr	r2, [r0, #8]
 677 02f2 1368     		ldr	r3, [r2]
 678 02f4 1978     		ldrb	r1, [r3]
 679 02f6 0A29     		cmp	r1, #10
 680 02f8 F0D1     		bne	.L61
 681              	.L75:
 682 02fa FFF7FEFF 		bl	__swbuf_r
 683 02fe 30E7     		b	.L56
 684              	.LVL38:
 685              	.L20:
  75:lib/Common/src/misc.c **** 		DBG_putch(' ');
 686              		.loc 1 75 0 discriminator 4
 687 0300 2021     		mov	r1, #32
 688              	.L70:
 689 0302 FFF7FEFF 		bl	__swbuf_r
 690 0306 2068     		ldr	r0, [r4]
 691 0308 8268     		ldr	r2, [r0, #8]
 692 030a 10E7     		b	.L23
 693              	.LVL39:
 694              	.L91:
  77:lib/Common/src/misc.c **** 			(data[i]>=0x20 && data[i]<0x80)?DBG_putch(data[i]):DBG_putch('.');
 695              		.loc 1 77 0
 696 030c 2E21     		mov	r1, #46
 697 030e FFF7FEFF 		bl	__swbuf_r
 698 0312 26E7     		b	.L56
 699              	.L93:
 700              		.align	2
 701              	.L92:
 702 0314 08000000 		.word	.LC4
 703 0318 00000000 		.word	_impure_ptr
 704 031c 00000000 		.word	.LC2
 705              		.cfi_endproc
 706              	.LFE3:
 708              		.section	.rodata.str1.4,"aMS",%progbits,1
 709              		.align	2
 710              	.LC2:
 711 0000 25303858 		.ascii	"%08X\000"
 711      00
 712 0005 000000   		.space	3
 713              	.LC4:
 714 0008 20253032 		.ascii	" %02X\000"
 714      5800
 715 000e 0000     		.text
 716              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
     /tmp/cc9WD2Ax.s:23     .text.__NOP:00000000 $t
     /tmp/cc9WD2Ax.s:28     .text.__NOP:00000000 __NOP
     /tmp/cc9WD2Ax.s:45     .text.time_waste:00000000 $t
     /tmp/cc9WD2Ax.s:50     .text.time_waste:00000000 time_waste
     /tmp/cc9WD2Ax.s:94     .text._delay_us:00000000 $t
     /tmp/cc9WD2Ax.s:99     .text._delay_us:00000000 _delay_us
     /tmp/cc9WD2Ax.s:181    .text.dump:00000000 $t
     /tmp/cc9WD2Ax.s:186    .text.dump:00000000 dump
     /tmp/cc9WD2Ax.s:702    .text.dump:00000314 $d
     /tmp/cc9WD2Ax.s:709    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
putchar
printf
__swbuf_r
_impure_ptr
