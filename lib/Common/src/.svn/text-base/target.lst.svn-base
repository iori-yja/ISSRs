   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.code	16
  12              		.file	"target.c"
  20              	.Ltext0:
  21              		.section	.text.GPIOResetInit,"ax",%progbits
  22              		.align	2
  23              		.global	GPIOResetInit
  24              		.code	16
  25              		.thumb_func
  27              	GPIOResetInit:
  28              	.LFB3:
  29              		.file 1 "lib/Common/src/target.c"
   1:lib/Common/src/target.c **** /*****************************************************************************
   2:lib/Common/src/target.c ****  *   target.c:  Target C file for NXP LPC23xx/24xx Family Microprocessors
   3:lib/Common/src/target.c ****  *
   4:lib/Common/src/target.c ****  *   Copyright(C) 2006, NXP Semiconductor
   5:lib/Common/src/target.c ****  *   All rights reserved.
   6:lib/Common/src/target.c ****  *
   7:lib/Common/src/target.c ****  *   History
   8:lib/Common/src/target.c ****  *   2006.07.13  ver 1.00    Prelimnary version, first Release
   9:lib/Common/src/target.c ****  *   2009.04.10  ver 2.00    Adopted to LPC2388 CQ-FRK-NXPARM JUNK Board
  10:lib/Common/src/target.c ****  *
  11:lib/Common/src/target.c **** *****************************************************************************/
  12:lib/Common/src/target.c **** #include "LPC23xx.h"
  13:lib/Common/src/target.c **** #include "target.h"
  14:lib/Common/src/target.c **** 
  15:lib/Common/src/target.c **** 
  16:lib/Common/src/target.c **** /******************************************************************************
  17:lib/Common/src/target.c **** ** Function name:		TargetInit
  18:lib/Common/src/target.c **** **
  19:lib/Common/src/target.c **** ** Descriptions:		Initialize the target board; it is called in a necessary 
  20:lib/Common/src/target.c **** **						place, change it as needed
  21:lib/Common/src/target.c **** **
  22:lib/Common/src/target.c **** ** parameters:			None
  23:lib/Common/src/target.c **** ** Returned value:		None
  24:lib/Common/src/target.c **** ** 
  25:lib/Common/src/target.c **** ******************************************************************************/
  26:lib/Common/src/target.c **** void TargetInit(void)
  27:lib/Common/src/target.c **** {
  28:lib/Common/src/target.c ****     /* Add your codes here */
  29:lib/Common/src/target.c ****     i2enable();
  30:lib/Common/src/target.c ****     PCONP |= 0x00001000;
  31:lib/Common/src/target.c ****     return;
  32:lib/Common/src/target.c **** }
  33:lib/Common/src/target.c **** 
  34:lib/Common/src/target.c **** /******************************************************************************
  35:lib/Common/src/target.c **** ** Function name:		GPIOResetInit
  36:lib/Common/src/target.c **** **
  37:lib/Common/src/target.c **** ** Descriptions:		Initialize the target board before running the main() 
  38:lib/Common/src/target.c **** **				function; User may change it as needed, but may not 
  39:lib/Common/src/target.c **** **				deleted it.
  40:lib/Common/src/target.c **** **
  41:lib/Common/src/target.c **** ** parameters:			None
  42:lib/Common/src/target.c **** ** Returned value:		None
  43:lib/Common/src/target.c **** ** 
  44:lib/Common/src/target.c **** ******************************************************************************/
  45:lib/Common/src/target.c **** void GPIOResetInit( void )
  46:lib/Common/src/target.c **** {
  30              		.loc 1 46 0
  47:lib/Common/src/target.c **** 	/* Reset all GPIO pins to default: primary function */
  48:lib/Common/src/target.c ****     PINSEL0 = 0x0FA00050;
  31              		.loc 1 48 0
  32 0000 2C4A     		ldr	r2, .L3
  33 0002 2D4B     		ldr	r3, .L3+4
  34 0004 1A60     		str	r2, [r3]
  49:lib/Common/src/target.c ****     PINSEL1 = 0x00154000;
  35              		.loc 1 49 0
  36 0006 2D4A     		ldr	r2, .L3+8
  37 0008 AA23     		mov	r3, #170
  38 000a 5B03     		lsl	r3, r3, #13
  39 000c 1360     		str	r3, [r2]
  50:lib/Common/src/target.c ****     PINSEL2 = 0x00000000;
  40              		.loc 1 50 0
  41 000e 2C4B     		ldr	r3, .L3+12
  42 0010 0022     		mov	r2, #0
  51:lib/Common/src/target.c ****     PINSEL3 = 0xF0000000;
  43              		.loc 1 51 0
  44 0012 2C49     		ldr	r1, .L3+16
  45              		.loc 1 50 0
  46 0014 1A60     		str	r2, [r3]
  47              		.loc 1 51 0
  48 0016 0433     		add	r3, r3, #4
  49 0018 1960     		str	r1, [r3]
  52:lib/Common/src/target.c ****     PINSEL4 = 0x00000000;
  50              		.loc 1 52 0
  51 001a 0433     		add	r3, r3, #4
  52 001c 1A60     		str	r2, [r3]
  53:lib/Common/src/target.c ****     PINSEL5 = 0x00000000;
  53              		.loc 1 53 0
  54 001e 0433     		add	r3, r3, #4
  55 0020 1A60     		str	r2, [r3]
  54:lib/Common/src/target.c ****     PINSEL6 = 0x00000000;
  56              		.loc 1 54 0
  57 0022 0433     		add	r3, r3, #4
  58 0024 1A60     		str	r2, [r3]
  55:lib/Common/src/target.c ****     PINSEL7 = 0x00000000;
  59              		.loc 1 55 0
  60 0026 0433     		add	r3, r3, #4
  61 0028 1A60     		str	r2, [r3]
  56:lib/Common/src/target.c ****     PINSEL8 = 0x00000000;
  62              		.loc 1 56 0
  63 002a 0433     		add	r3, r3, #4
  64 002c 1A60     		str	r2, [r3]
  57:lib/Common/src/target.c ****     PINSEL9 = 0x00000000;
  65              		.loc 1 57 0
  66 002e 0433     		add	r3, r3, #4
  67 0030 1A60     		str	r2, [r3]
  58:lib/Common/src/target.c ****    PINSEL10 = 0x00000000;
  68              		.loc 1 58 0
  69 0032 0433     		add	r3, r3, #4
  70 0034 1A60     		str	r2, [r3]
  59:lib/Common/src/target.c ****     
  60:lib/Common/src/target.c ****      IODIR0 = 0x00000000;
  71              		.loc 1 60 0
  72 0036 244B     		ldr	r3, .L3+20
  73 0038 1A60     		str	r2, [r3]
  61:lib/Common/src/target.c ****      IODIR1 = 0x00000000;
  74              		.loc 1 61 0
  75 003a 1033     		add	r3, r3, #16
  76 003c 1A60     		str	r2, [r3]
  62:lib/Common/src/target.c ****      IOSET0 = 0x00000000;
  77              		.loc 1 62 0
  78 003e 143B     		sub	r3, r3, #20
  79 0040 1A60     		str	r2, [r3]
  63:lib/Common/src/target.c ****      IOSET1 = 0x00000000;
  80              		.loc 1 63 0
  81 0042 1033     		add	r3, r3, #16
  82 0044 1A60     		str	r2, [r3]
  64:lib/Common/src/target.c ****     
  65:lib/Common/src/target.c ****     FIO0DIR = 0x00000000;
  83              		.loc 1 65 0
  84 0046 214B     		ldr	r3, .L3+24
  85 0048 1A60     		str	r2, [r3]
  66:lib/Common/src/target.c ****     FIO1DIR = 0x00000000;
  86              		.loc 1 66 0
  87 004a 2033     		add	r3, r3, #32
  88 004c 1A60     		str	r2, [r3]
  67:lib/Common/src/target.c ****     FIO2DIR = 0x00000200;
  89              		.loc 1 67 0
  90 004e 2049     		ldr	r1, .L3+28
  91 0050 8023     		mov	r3, #128
  92 0052 9B00     		lsl	r3, r3, #2
  93 0054 0B60     		str	r3, [r1]
  68:lib/Common/src/target.c ****     FIO3DIR = 0x00000000;
  94              		.loc 1 68 0
  95 0056 1F4B     		ldr	r3, .L3+32
  69:lib/Common/src/target.c ****     FIO4DIR = 0x0000FFFF;
  96              		.loc 1 69 0
  97 0058 1F49     		ldr	r1, .L3+36
  98              		.loc 1 68 0
  99 005a 1A60     		str	r2, [r3]
 100              		.loc 1 69 0
 101 005c 2033     		add	r3, r3, #32
 102 005e 1960     		str	r1, [r3]
  70:lib/Common/src/target.c ****     
  71:lib/Common/src/target.c **** 	FIO0MASK = 0x00000000;
 103              		.loc 1 71 0
 104 0060 703B     		sub	r3, r3, #112
 105 0062 1A60     		str	r2, [r3]
  72:lib/Common/src/target.c **** 	FIO0PIN = 0x00000000;
 106              		.loc 1 72 0
 107 0064 0433     		add	r3, r3, #4
 108 0066 1A60     		str	r2, [r3]
  73:lib/Common/src/target.c **** 	FIO0SET = 0x00000000;
 109              		.loc 1 73 0
 110 0068 0433     		add	r3, r3, #4
 111 006a 1A60     		str	r2, [r3]
  74:lib/Common/src/target.c **** 	FIO0CLR = 0x00000000;
 112              		.loc 1 74 0
 113 006c 0433     		add	r3, r3, #4
 114 006e 1A60     		str	r2, [r3]
  75:lib/Common/src/target.c **** 	
  76:lib/Common/src/target.c **** 	FIO1MASK = 0x00000000;
 115              		.loc 1 76 0
 116 0070 1433     		add	r3, r3, #20
 117 0072 1A60     		str	r2, [r3]
  77:lib/Common/src/target.c **** 	FIO1PIN = 0x00000000;
 118              		.loc 1 77 0
 119 0074 0433     		add	r3, r3, #4
 120 0076 1A60     		str	r2, [r3]
  78:lib/Common/src/target.c **** 	FIO1SET = 0x00000000;
 121              		.loc 1 78 0
 122 0078 0433     		add	r3, r3, #4
 123 007a 1A60     		str	r2, [r3]
  79:lib/Common/src/target.c **** 	FIO1CLR = 0x00000000;
 124              		.loc 1 79 0
 125 007c 0433     		add	r3, r3, #4
 126 007e 1A60     		str	r2, [r3]
  80:lib/Common/src/target.c **** 	
  81:lib/Common/src/target.c **** 	FIO2MASK = 0x00000000;
 127              		.loc 1 81 0
 128 0080 1433     		add	r3, r3, #20
 129 0082 1A60     		str	r2, [r3]
  82:lib/Common/src/target.c **** 	FIO2PIN = 0x00000000;
 130              		.loc 1 82 0
 131 0084 0433     		add	r3, r3, #4
 132 0086 1A60     		str	r2, [r3]
  83:lib/Common/src/target.c **** 	FIO2SET = 0x00000000;
 133              		.loc 1 83 0
 134 0088 0433     		add	r3, r3, #4
 135 008a 1A60     		str	r2, [r3]
  84:lib/Common/src/target.c **** 	FIO2CLR = 0x00000000;
 136              		.loc 1 84 0
 137 008c 0433     		add	r3, r3, #4
 138 008e 1A60     		str	r2, [r3]
  85:lib/Common/src/target.c **** 
  86:lib/Common/src/target.c **** 	FIO3MASK = 0x00000000;
 139              		.loc 1 86 0
 140 0090 1433     		add	r3, r3, #20
 141 0092 1A60     		str	r2, [r3]
  87:lib/Common/src/target.c **** 	FIO3PIN = 0x00000000;
 142              		.loc 1 87 0
 143 0094 0433     		add	r3, r3, #4
 144 0096 1A60     		str	r2, [r3]
  88:lib/Common/src/target.c **** 	FIO3SET = 0x00000000;
 145              		.loc 1 88 0
 146 0098 0433     		add	r3, r3, #4
 147 009a 1A60     		str	r2, [r3]
  89:lib/Common/src/target.c **** 	FIO3CLR = 0x00000000;
 148              		.loc 1 89 0
 149 009c 0433     		add	r3, r3, #4
 150 009e 1A60     		str	r2, [r3]
  90:lib/Common/src/target.c **** 	
  91:lib/Common/src/target.c **** 	FIO4MASK = 0x00000000;
 151              		.loc 1 91 0
 152 00a0 1433     		add	r3, r3, #20
 153 00a2 1A60     		str	r2, [r3]
  92:lib/Common/src/target.c **** 	FIO4PIN = 0x00000000;
 154              		.loc 1 92 0
 155 00a4 0433     		add	r3, r3, #4
 156 00a6 1A60     		str	r2, [r3]
  93:lib/Common/src/target.c **** 	FIO4SET = 0x00000000;
 157              		.loc 1 93 0
 158 00a8 0433     		add	r3, r3, #4
 159 00aa 1A60     		str	r2, [r3]
  94:lib/Common/src/target.c **** 	FIO4CLR = 0x00000000;
 160              		.loc 1 94 0
 161 00ac 0433     		add	r3, r3, #4
 162 00ae 1A60     		str	r2, [r3]
  95:lib/Common/src/target.c **** 	
  96:lib/Common/src/target.c ****     return;        
  97:lib/Common/src/target.c **** }
 163              		.loc 1 97 0
 164              		@ sp needed for prologue
 165 00b0 7047     		bx	lr
 166              	.L4:
 167 00b2 C046     		.align	2
 168              	.L3:
 169 00b4 5000A00F 		.word	262144080
 170 00b8 00C002E0 		.word	-536690688
 171 00bc 04C002E0 		.word	-536690684
 172 00c0 08C002E0 		.word	-536690680
 173 00c4 000000F0 		.word	-268435456
 174 00c8 088002E0 		.word	-536707064
 175 00cc 00C0FF3F 		.word	1073725440
 176 00d0 40C0FF3F 		.word	1073725504
 177 00d4 60C0FF3F 		.word	1073725536
 178 00d8 FFFF0000 		.word	65535
 179              	.LFE3:
 181              		.section	.text.ConfigurePLL,"ax",%progbits
 182              		.align	2
 183              		.global	ConfigurePLL
 184              		.code	16
 185              		.thumb_func
 187              	ConfigurePLL:
 188              	.LFB4:
  98:lib/Common/src/target.c **** 
  99:lib/Common/src/target.c **** /******************************************************************************
 100:lib/Common/src/target.c **** ** Function name:		ConfigurePLL
 101:lib/Common/src/target.c **** **
 102:lib/Common/src/target.c **** ** Descriptions:		Configure PLL switching to main OSC instead of IRC
 103:lib/Common/src/target.c **** **						at power up and wake up from power down. 
 104:lib/Common/src/target.c **** **						This routine is used in TargetResetInit() and those
 105:lib/Common/src/target.c **** **						examples using power down and wake up such as
 106:lib/Common/src/target.c **** **						USB suspend to resume, ethernet WOL, and power management
 107:lib/Common/src/target.c **** **						example
 108:lib/Common/src/target.c **** ** parameters:			None
 109:lib/Common/src/target.c **** ** Returned value:		None
 110:lib/Common/src/target.c **** ** 
 111:lib/Common/src/target.c **** ******************************************************************************/
 112:lib/Common/src/target.c **** void ConfigurePLL ( void )
 113:lib/Common/src/target.c **** {
 189              		.loc 1 113 0
 190 0000 10B5     		push	{r4, lr}
 191              	.LCFI0:
 114:lib/Common/src/target.c **** 	DWORD MValue, NValue;
 115:lib/Common/src/target.c **** 
 116:lib/Common/src/target.c **** 	if ( PLLSTAT & (1 << 25) )
 192              		.loc 1 116 0
 193 0002 2D4B     		ldr	r3, .L20
 194 0004 1B68     		ldr	r3, [r3]
 195 0006 9A01     		lsl	r2, r3, #6
 196 0008 07D5     		bpl	.L6
 117:lib/Common/src/target.c ****     {
 118:lib/Common/src/target.c **** 		PLLCON = 1;			/* Enable PLL, disconnected */
 197              		.loc 1 118 0
 198 000a 2C4B     		ldr	r3, .L20+4
 199 000c 0122     		mov	r2, #1
 200 000e 1A60     		str	r2, [r3]
 119:lib/Common/src/target.c **** 	 	PLLFEED = 0xaa;
 201              		.loc 1 119 0
 202 0010 2B4A     		ldr	r2, .L20+8
 203 0012 AA23     		mov	r3, #170
 204 0014 1360     		str	r3, [r2]
 120:lib/Common/src/target.c **** 		PLLFEED = 0x55;
 205              		.loc 1 120 0
 206 0016 5523     		mov	r3, #85
 207 0018 1360     		str	r3, [r2]
 208              	.L6:
 121:lib/Common/src/target.c ****     }
 122:lib/Common/src/target.c **** 
 123:lib/Common/src/target.c ****     PLLCON = 0;				/* Disable PLL, disconnected */
 209              		.loc 1 123 0
 210 001a 284B     		ldr	r3, .L20+4
 211 001c 0022     		mov	r2, #0
 212 001e 1A60     		str	r2, [r3]
 124:lib/Common/src/target.c ****     PLLFEED = 0xaa;
 213              		.loc 1 124 0
 214 0020 274A     		ldr	r2, .L20+8
 215 0022 AA23     		mov	r3, #170
 216 0024 1360     		str	r3, [r2]
 125:lib/Common/src/target.c ****     PLLFEED = 0x55;
 217              		.loc 1 125 0
 218 0026 5523     		mov	r3, #85
 219 0028 1360     		str	r3, [r2]
 126:lib/Common/src/target.c ****     
 127:lib/Common/src/target.c **** 	SCS |= 0x20;			/* Enable main OSC */
 220              		.loc 1 127 0
 221 002a 2649     		ldr	r1, .L20+12
 222 002c 0B68     		ldr	r3, [r1]
 223 002e 2022     		mov	r2, #32
 224 0030 1343     		orr	r3, r3, r2
 225 0032 0B60     		str	r3, [r1]
 128:lib/Common/src/target.c ****     while( !(SCS & 0x40) );	/* Wait until main OSC is usable */
 226              		.loc 1 128 0
 227 0034 4022     		mov	r2, #64
 228              	.L7:
 229 0036 0B68     		ldr	r3, [r1]
 230 0038 1342     		tst	r3, r2
 231 003a FCD0     		beq	.L7
 129:lib/Common/src/target.c **** 
 130:lib/Common/src/target.c ****     CLKSRCSEL = 0x1;		/* select main OSC, 12MHz, as the PLL clock source */
 232              		.loc 1 130 0
 233 003c 224B     		ldr	r3, .L20+16
 234 003e 0124     		mov	r4, #1
 235 0040 1C60     		str	r4, [r3]
 131:lib/Common/src/target.c **** 	
 132:lib/Common/src/target.c **** 		  
 133:lib/Common/src/target.c **** 	PLLCFG = (PLL_NValue << 16) | PLL_MValue ;
 236              		.loc 1 133 0
 237 0042 0B22     		mov	r2, #11
 238 0044 883B     		sub	r3, r3, #136
 239 0046 1A60     		str	r2, [r3]
 134:lib/Common/src/target.c **** 	PLLFEED = 0xAA;
 240              		.loc 1 134 0
 241 0048 1D4A     		ldr	r2, .L20+8
 242 004a AA20     		mov	r0, #170
 135:lib/Common/src/target.c **** 	PLLFEED = 0x55;
 243              		.loc 1 135 0
 244 004c 5521     		mov	r1, #85
 136:lib/Common/src/target.c **** 	PLLCON = 1;				/* Enable PLL */
 245              		.loc 1 136 0
 246 004e 043B     		sub	r3, r3, #4
 247              		.loc 1 134 0
 248 0050 1060     		str	r0, [r2]
 249              		.loc 1 135 0
 250 0052 1160     		str	r1, [r2]
 251              		.loc 1 136 0
 252 0054 1C60     		str	r4, [r3]
 137:lib/Common/src/target.c **** 	PLLFEED = 0xAA;
 253              		.loc 1 137 0
 254 0056 1060     		str	r0, [r2]
 138:lib/Common/src/target.c **** 	PLLFEED = 0x55;
 139:lib/Common/src/target.c **** 	
 140:lib/Common/src/target.c **** 
 141:lib/Common/src/target.c ****     CCLKCFG = CCLKDivValue;	        /* Fcore = 72 MHz */
 255              		.loc 1 141 0
 256 0058 8433     		add	r3, r3, #132
 257              		.loc 1 138 0
 258 005a 1160     		str	r1, [r2]
 259              		.loc 1 141 0
 260 005c 0322     		mov	r2, #3
 261 005e 1A60     		str	r2, [r3]
 142:lib/Common/src/target.c **** #if USE_USB
 143:lib/Common/src/target.c ****     USBCLKCFG = USBCLKDivValue;		/* usbclk = 48 MHz */
 262              		.loc 1 143 0
 263 0060 0522     		mov	r2, #5
 264 0062 0433     		add	r3, r3, #4
 265 0064 1A60     		str	r2, [r3]
 144:lib/Common/src/target.c **** #endif
 145:lib/Common/src/target.c **** 
 146:lib/Common/src/target.c ****     while ( ((PLLSTAT & (1 << 26)) == 0) );	/* Check lock bit status */
 266              		.loc 1 146 0
 267 0066 1448     		ldr	r0, .L20
 268 0068 8022     		mov	r2, #128
 269 006a D204     		lsl	r2, r2, #19
 270              	.L8:
 271 006c 0368     		ldr	r3, [r0]
 272 006e 1249     		ldr	r1, .L20
 273 0070 1342     		tst	r3, r2
 274 0072 FBD0     		beq	.L8
 147:lib/Common/src/target.c ****     
 148:lib/Common/src/target.c ****     MValue = PLLSTAT & 0x00007FFF;
 149:lib/Common/src/target.c ****     NValue = (PLLSTAT & 0x00FF0000) >> 16;
 275              		.loc 1 149 0
 276 0074 154A     		ldr	r2, .L20+20
 277              		.loc 1 148 0
 278 0076 0B68     		ldr	r3, [r1]
 279              		.loc 1 149 0
 280 0078 0968     		ldr	r1, [r1]
 281 007a 1340     		and	r3, r3, r2
 282 007c 0902     		lsl	r1, r1, #8
 283 007e 0B3B     		sub	r3, r3, #11
 284 0080 090E     		lsr	r1, r1, #24
 285 0082 5A1E     		sub	r2, r3, #1
 286 0084 9341     		sbc	r3, r3, r2
 287 0086 4A1E     		sub	r2, r1, #1
 288 0088 9141     		sbc	r1, r1, r2
 289              	.L9:
 150:lib/Common/src/target.c ****     while ((MValue != PLL_MValue) && ( NValue != PLL_NValue) );
 290              		.loc 1 150 0
 291 008a 002B     		cmp	r3, #0
 292 008c 10D1     		bne	.L19
 293              	.L13:
 151:lib/Common/src/target.c **** 
 152:lib/Common/src/target.c ****     PLLCON = 3;				/* enable and connect */
 294              		.loc 1 152 0
 295 008e 0B4B     		ldr	r3, .L20+4
 296 0090 0322     		mov	r2, #3
 297 0092 1A60     		str	r2, [r3]
 153:lib/Common/src/target.c ****     PLLFEED = 0xaa;
 298              		.loc 1 153 0
 299 0094 0A4A     		ldr	r2, .L20+8
 300 0096 AA23     		mov	r3, #170
 301 0098 1360     		str	r3, [r2]
 154:lib/Common/src/target.c ****     PLLFEED = 0x55;
 302              		.loc 1 154 0
 303 009a 5523     		mov	r3, #85
 304 009c 1360     		str	r3, [r2]
 155:lib/Common/src/target.c **** 	while ( ((PLLSTAT & (1 << 25)) == 0) );	/* Check connect bit status */
 305              		.loc 1 155 0
 306 009e 0649     		ldr	r1, .L20
 307 00a0 8022     		mov	r2, #128
 308 00a2 9204     		lsl	r2, r2, #18
 309              	.L11:
 310 00a4 0B68     		ldr	r3, [r1]
 311 00a6 1342     		tst	r3, r2
 312 00a8 FCD0     		beq	.L11
 156:lib/Common/src/target.c **** 
 157:lib/Common/src/target.c **** 
 158:lib/Common/src/target.c **** 	return;
 159:lib/Common/src/target.c **** }
 313              		.loc 1 159 0
 314              		@ sp needed for prologue
 315 00aa 10BC     		pop	{r4}
 316 00ac 01BC     		pop	{r0}
 317 00ae 0047     		bx	r0
 318              	.L19:
 319              		.loc 1 150 0
 320 00b0 0029     		cmp	r1, #0
 321 00b2 EAD1     		bne	.L9
 322 00b4 EBE7     		b	.L13
 323              	.L21:
 324 00b6 C046     		.align	2
 325              	.L20:
 326 00b8 88C01FE0 		.word	-534790008
 327 00bc 80C01FE0 		.word	-534790016
 328 00c0 8CC01FE0 		.word	-534790004
 329 00c4 A0C11FE0 		.word	-534789728
 330 00c8 0CC11FE0 		.word	-534789876
 331 00cc FF7F0000 		.word	32767
 332              	.LFE4:
 334              		.section	.text.TargetInit,"ax",%progbits
 335              		.align	2
 336              		.global	TargetInit
 337              		.code	16
 338              		.thumb_func
 340              	TargetInit:
 341              	.LFB2:
 342              		.loc 1 27 0
 343 0000 10B5     		push	{r4, lr}
 344              	.LCFI1:
 345              		.loc 1 29 0
 346 0002 FFF7FEFF 		bl	i2enable
 347              		.loc 1 30 0
 348 0006 0449     		ldr	r1, .L24
 349 0008 8023     		mov	r3, #128
 350 000a 0A68     		ldr	r2, [r1]
 351 000c 5B01     		lsl	r3, r3, #5
 352 000e 1A43     		orr	r2, r2, r3
 353 0010 0A60     		str	r2, [r1]
 354              		.loc 1 32 0
 355              		@ sp needed for prologue
 356 0012 10BC     		pop	{r4}
 357 0014 01BC     		pop	{r0}
 358 0016 0047     		bx	r0
 359              	.L25:
 360              		.align	2
 361              	.L24:
 362 0018 C4C01FE0 		.word	-534789948
 363              	.LFE2:
 365              		.section	.text.TargetResetInit,"ax",%progbits
 366              		.align	2
 367              		.global	TargetResetInit
 368              		.code	16
 369              		.thumb_func
 371              	TargetResetInit:
 372              	.LFB5:
 160:lib/Common/src/target.c **** 
 161:lib/Common/src/target.c **** /******************************************************************************
 162:lib/Common/src/target.c **** ** Function name:		TargetResetInit
 163:lib/Common/src/target.c **** **
 164:lib/Common/src/target.c **** ** Descriptions:		Initialize the target board before running the main() 
 165:lib/Common/src/target.c **** **						function; User may change it as needed, but may not 
 166:lib/Common/src/target.c **** **						deleted it.
 167:lib/Common/src/target.c **** **
 168:lib/Common/src/target.c **** ** parameters:			None
 169:lib/Common/src/target.c **** ** Returned value:		None
 170:lib/Common/src/target.c **** ** 
 171:lib/Common/src/target.c **** ******************************************************************************/
 172:lib/Common/src/target.c **** void TargetResetInit(void)
 173:lib/Common/src/target.c **** {
 373              		.loc 1 173 0
 374 0000 10B5     		push	{r4, lr}
 375              	.LCFI2:
 174:lib/Common/src/target.c **** 
 175:lib/Common/src/target.c **** // mthomas
 176:lib/Common/src/target.c **** #if 0
 177:lib/Common/src/target.c **** #ifdef __DEBUG_RAM    
 178:lib/Common/src/target.c ****     MEMMAP = 0x2;			/* remap to internal RAM */
 179:lib/Common/src/target.c **** #endif
 180:lib/Common/src/target.c **** 
 181:lib/Common/src/target.c **** #ifdef __DEBUG_FLASH    
 182:lib/Common/src/target.c ****     MEMMAP = 0x1;			/* remap to internal flash */
 183:lib/Common/src/target.c **** #endif
 184:lib/Common/src/target.c **** #endif
 185:lib/Common/src/target.c **** 
 186:lib/Common/src/target.c **** #ifdef __DEBUG_RAM    
 187:lib/Common/src/target.c ****     MEMMAP = 0x2;			/* remap to internal RAM */
 188:lib/Common/src/target.c **** #else
 189:lib/Common/src/target.c ****     MEMMAP = 0x1;			/* remap to internal flash */
 376              		.loc 1 189 0
 377 0002 0F4B     		ldr	r3, .L28
 378 0004 0122     		mov	r2, #1
 379 0006 1A60     		str	r2, [r3]
 190:lib/Common/src/target.c **** #endif 
 191:lib/Common/src/target.c **** 
 192:lib/Common/src/target.c **** 
 193:lib/Common/src/target.c **** #if USE_USB
 194:lib/Common/src/target.c **** 	PCONP |= 0x80000000;		/* Turn On USB PCLK */
 380              		.loc 1 194 0
 381 0008 0E49     		ldr	r1, .L28+4
 382 000a 0F4A     		ldr	r2, .L28+8
 383 000c 0B68     		ldr	r3, [r1]
 384 000e 1343     		orr	r3, r3, r2
 385 0010 0B60     		str	r3, [r1]
 195:lib/Common/src/target.c **** #endif
 196:lib/Common/src/target.c **** 	/* Configure PLL, switch from IRC to Main OSC */
 197:lib/Common/src/target.c **** 	ConfigurePLL();
 386              		.loc 1 197 0
 387 0012 FFF7FEFF 		bl	ConfigurePLL
 198:lib/Common/src/target.c **** 
 199:lib/Common/src/target.c ****   /* Set system timers for each component */
 200:lib/Common/src/target.c **** #if (Fpclk / (Fcclk / 4)) == 1
 201:lib/Common/src/target.c ****     PCLKSEL0 = 0x00000000;	/* PCLK is 1/4 CCLK */
 202:lib/Common/src/target.c ****     PCLKSEL1 = 0x00000000;
 203:lib/Common/src/target.c **** #endif
 204:lib/Common/src/target.c **** #if (Fpclk / (Fcclk / 4)) == 2
 205:lib/Common/src/target.c ****     PCLKSEL0 = 0xAAAAAAAA;	/* PCLK is 1/2 CCLK */
 388              		.loc 1 205 0
 389 0016 0D4A     		ldr	r2, .L28+12
 390 0018 0D4B     		ldr	r3, .L28+16
 206:lib/Common/src/target.c ****     PCLKSEL1 = 0xAAAAAAAA;	 
 207:lib/Common/src/target.c **** #endif
 208:lib/Common/src/target.c **** #if (Fpclk / (Fcclk / 4)) == 4
 209:lib/Common/src/target.c ****     PCLKSEL0 = 0x55555555;	/* PCLK is the same as CCLK */
 210:lib/Common/src/target.c ****     PCLKSEL1 = 0x55555555;	
 211:lib/Common/src/target.c **** #endif
 212:lib/Common/src/target.c **** 
 213:lib/Common/src/target.c ****     /* Set memory accelerater module*/
 214:lib/Common/src/target.c ****     MAMCR = 0;
 391              		.loc 1 214 0
 392 001a 0E49     		ldr	r1, .L28+20
 393              		.loc 1 205 0
 394 001c 1A60     		str	r2, [r3]
 395              		.loc 1 206 0
 396 001e 0433     		add	r3, r3, #4
 397 0020 1A60     		str	r2, [r3]
 398              		.loc 1 214 0
 399 0022 0023     		mov	r3, #0
 400 0024 0B60     		str	r3, [r1]
 215:lib/Common/src/target.c **** #if Fcclk < 20000000
 216:lib/Common/src/target.c ****     MAMTIM = 1;
 217:lib/Common/src/target.c **** #else
 218:lib/Common/src/target.c **** #if Fcclk < 40000000
 219:lib/Common/src/target.c ****     MAMTIM = 2;
 220:lib/Common/src/target.c **** #else
 221:lib/Common/src/target.c ****     MAMTIM = 3;
 401              		.loc 1 221 0
 402 0026 0C4B     		ldr	r3, .L28+24
 403 0028 0322     		mov	r2, #3
 404 002a 1A60     		str	r2, [r3]
 222:lib/Common/src/target.c **** #endif
 223:lib/Common/src/target.c **** #endif
 224:lib/Common/src/target.c ****     MAMCR = 2;
 405              		.loc 1 224 0
 406 002c 0223     		mov	r3, #2
 407 002e 0B60     		str	r3, [r1]
 225:lib/Common/src/target.c **** 	
 226:lib/Common/src/target.c **** 	init_VIC();
 408              		.loc 1 226 0
 409 0030 FFF7FEFF 		bl	init_VIC
 227:lib/Common/src/target.c **** 	
 228:lib/Common/src/target.c **** 	TargetInit();
 229:lib/Common/src/target.c **** 	
 230:lib/Common/src/target.c ****     return;
 231:lib/Common/src/target.c **** }
 410              		.loc 1 231 0
 411              		@ sp needed for prologue
 412              		.loc 1 228 0
 413 0034 FFF7FEFF 		bl	TargetInit
 414              		.loc 1 231 0
 415 0038 10BC     		pop	{r4}
 416 003a 01BC     		pop	{r0}
 417 003c 0047     		bx	r0
 418              	.L29:
 419 003e C046     		.align	2
 420              	.L28:
 421 0040 40C01FE0 		.word	-534790080
 422 0044 C4C01FE0 		.word	-534789948
 423 0048 00000080 		.word	-2147483648
 424 004c AAAAAAAA 		.word	-1431655766
 425 0050 A8C11FE0 		.word	-534789720
 426 0054 00C01FE0 		.word	-534790144
 427 0058 04C01FE0 		.word	-534790140
 428              	.LFE5:
 502              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 target.c
     /tmp/ccUDdZ6o.s:22     .text.GPIOResetInit:00000000 $t
     /tmp/ccUDdZ6o.s:27     .text.GPIOResetInit:00000000 GPIOResetInit
     /tmp/ccUDdZ6o.s:169    .text.GPIOResetInit:000000b4 $d
     /tmp/ccUDdZ6o.s:182    .text.ConfigurePLL:00000000 $t
     /tmp/ccUDdZ6o.s:187    .text.ConfigurePLL:00000000 ConfigurePLL
     /tmp/ccUDdZ6o.s:326    .text.ConfigurePLL:000000b8 $d
     /tmp/ccUDdZ6o.s:335    .text.TargetInit:00000000 $t
     /tmp/ccUDdZ6o.s:340    .text.TargetInit:00000000 TargetInit
     /tmp/ccUDdZ6o.s:362    .text.TargetInit:00000018 $d
     /tmp/ccUDdZ6o.s:366    .text.TargetResetInit:00000000 $t
     /tmp/ccUDdZ6o.s:371    .text.TargetResetInit:00000000 TargetResetInit
     /tmp/ccUDdZ6o.s:421    .text.TargetResetInit:00000040 $d
     /tmp/ccUDdZ6o.s:506    .debug_loc:00000000 $d

UNDEFINED SYMBOLS
i2enable
init_VIC
