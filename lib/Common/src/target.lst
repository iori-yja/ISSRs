   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.code	16
  12              		.file	"target.c"
  20              	.Ltext0:
  21              		.cfi_sections	.debug_frame
  22              		.section	.text.TargetInit,"ax",%progbits
  23              		.align	2
  24              		.global	TargetInit
  25              		.code	16
  26              		.thumb_func
  28              	TargetInit:
  29              	.LFB0:
  30              		.file 1 "lib/Common/src/target.c"
   1:lib/Common/src/target.c **** /*****************************************************************************
   2:lib/Common/src/target.c ****  *   target.c:  Target C file for NXP LPC23xx/24xx Family Microprocessors
   3:lib/Common/src/target.c ****  *
   4:lib/Common/src/target.c ****  *   Copyright(C) 2006, NXP Semiconductor
   5:lib/Common/src/target.c ****  *   All rights reserved.
   6:lib/Common/src/target.c ****  *
   7:lib/Common/src/target.c ****  *   History
   8:lib/Common/src/target.c ****  *   2006.07.13  ver 1.00    Prelimnary version, first Release
   9:lib/Common/src/target.c ****  *   2009.04.10  ver 2.00    Adopted to LPC2388 CQ-FRK-NXPARM JUNK Board
  10:lib/Common/src/target.c ****  *
  11:lib/Common/src/target.c **** *****************************************************************************/
  12:lib/Common/src/target.c **** #include "LPC23xx.h"
  13:lib/Common/src/target.c **** #include "target.h"
  14:lib/Common/src/target.c **** 
  15:lib/Common/src/target.c **** 
  16:lib/Common/src/target.c **** /******************************************************************************
  17:lib/Common/src/target.c **** ** Function name:		TargetInit
  18:lib/Common/src/target.c **** **
  19:lib/Common/src/target.c **** ** Descriptions:		Initialize the target board; it is called in a necessary 
  20:lib/Common/src/target.c **** **						place, change it as needed
  21:lib/Common/src/target.c **** **
  22:lib/Common/src/target.c **** ** parameters:			None
  23:lib/Common/src/target.c **** ** Returned value:		None
  24:lib/Common/src/target.c **** ** 
  25:lib/Common/src/target.c **** ******************************************************************************/
  26:lib/Common/src/target.c **** void TargetInit(void)
  27:lib/Common/src/target.c **** {
  31              		.loc 1 27 0
  32              		.cfi_startproc
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  28:lib/Common/src/target.c ****     /* Add your codes here */
  29:lib/Common/src/target.c ****     i2enable();
  38              		.loc 1 29 0
  39 0002 FFF7FEFF 		bl	i2enable
  30:lib/Common/src/target.c ****     PCONP |= 0x00001000;
  40              		.loc 1 30 0
  41 0006 044B     		ldr	r3, .L2
  42 0008 8020     		mov	r0, #128
  43 000a 1968     		ldr	r1, [r3]
  44 000c 4201     		lsl	r2, r0, #5
  45 000e 0A43     		orr	r2, r2, r1
  46 0010 1A60     		str	r2, [r3]
  31:lib/Common/src/target.c ****     return;
  32:lib/Common/src/target.c **** }
  47              		.loc 1 32 0
  48              		@ sp needed for prologue
  49 0012 08BC     		pop	{r3}
  50 0014 01BC     		pop	{r0}
  51 0016 0047     		bx	r0
  52              	.L3:
  53              		.align	2
  54              	.L2:
  55 0018 C4C01FE0 		.word	-534789948
  56              		.cfi_endproc
  57              	.LFE0:
  59              		.section	.text.GPIOResetInit,"ax",%progbits
  60              		.align	2
  61              		.global	GPIOResetInit
  62              		.code	16
  63              		.thumb_func
  65              	GPIOResetInit:
  66              	.LFB1:
  33:lib/Common/src/target.c **** 
  34:lib/Common/src/target.c **** /******************************************************************************
  35:lib/Common/src/target.c **** ** Function name:		GPIOResetInit
  36:lib/Common/src/target.c **** **
  37:lib/Common/src/target.c **** ** Descriptions:		Initialize the target board before running the main() 
  38:lib/Common/src/target.c **** **				function; User may change it as needed, but may not 
  39:lib/Common/src/target.c **** **				deleted it.
  40:lib/Common/src/target.c **** **
  41:lib/Common/src/target.c **** ** parameters:			None
  42:lib/Common/src/target.c **** ** Returned value:		None
  43:lib/Common/src/target.c **** ** 
  44:lib/Common/src/target.c **** ******************************************************************************/
  45:lib/Common/src/target.c **** void GPIOResetInit( void )
  46:lib/Common/src/target.c **** {
  67              		.loc 1 46 0
  68              		.cfi_startproc
  47:lib/Common/src/target.c **** 	/* Reset all GPIO pins to default: primary function */
  48:lib/Common/src/target.c ****     PINSEL0 = 0x0FA00050;
  69              		.loc 1 48 0
  70 0000 1C4B     		ldr	r3, .L5
  71 0002 1D4A     		ldr	r2, .L5+4
  49:lib/Common/src/target.c ****     PINSEL1 = 0x00154000;
  72              		.loc 1 49 0
  73 0004 AA21     		mov	r1, #170
  48:lib/Common/src/target.c ****     PINSEL0 = 0x0FA00050;
  74              		.loc 1 48 0
  75 0006 1A60     		str	r2, [r3]
  76              		.loc 1 49 0
  77 0008 4803     		lsl	r0, r1, #13
  50:lib/Common/src/target.c ****     PINSEL2 = 0x00000000;
  51:lib/Common/src/target.c ****     PINSEL3 = 0xF0000000;
  78              		.loc 1 51 0
  79 000a F022     		mov	r2, #240
  49:lib/Common/src/target.c ****     PINSEL1 = 0x00154000;
  80              		.loc 1 49 0
  81 000c 5860     		str	r0, [r3, #4]
  82              		.loc 1 51 0
  83 000e 1106     		lsl	r1, r2, #24
  50:lib/Common/src/target.c ****     PINSEL2 = 0x00000000;
  84              		.loc 1 50 0
  85 0010 1A48     		ldr	r0, .L5+8
  52:lib/Common/src/target.c ****     PINSEL4 = 0x00000000;
  53:lib/Common/src/target.c ****     PINSEL5 = 0x00000000;
  54:lib/Common/src/target.c ****     PINSEL6 = 0x00000000;
  55:lib/Common/src/target.c ****     PINSEL7 = 0x00000000;
  56:lib/Common/src/target.c ****     PINSEL8 = 0x00000000;
  57:lib/Common/src/target.c ****     PINSEL9 = 0x00000000;
  58:lib/Common/src/target.c ****    PINSEL10 = 0x00000000;
  59:lib/Common/src/target.c ****     
  60:lib/Common/src/target.c ****      IODIR0 = 0x00000000;
  86              		.loc 1 60 0
  87 0012 1B4A     		ldr	r2, .L5+12
  50:lib/Common/src/target.c ****     PINSEL2 = 0x00000000;
  88              		.loc 1 50 0
  89 0014 0023     		mov	r3, #0
  90 0016 0360     		str	r3, [r0]
  51:lib/Common/src/target.c ****     PINSEL3 = 0xF0000000;
  91              		.loc 1 51 0
  92 0018 4160     		str	r1, [r0, #4]
  52:lib/Common/src/target.c ****     PINSEL4 = 0x00000000;
  93              		.loc 1 52 0
  94 001a 8360     		str	r3, [r0, #8]
  53:lib/Common/src/target.c ****     PINSEL5 = 0x00000000;
  95              		.loc 1 53 0
  96 001c C360     		str	r3, [r0, #12]
  54:lib/Common/src/target.c ****     PINSEL6 = 0x00000000;
  97              		.loc 1 54 0
  98 001e 0361     		str	r3, [r0, #16]
  55:lib/Common/src/target.c ****     PINSEL7 = 0x00000000;
  99              		.loc 1 55 0
 100 0020 4361     		str	r3, [r0, #20]
  56:lib/Common/src/target.c ****     PINSEL8 = 0x00000000;
 101              		.loc 1 56 0
 102 0022 8361     		str	r3, [r0, #24]
  57:lib/Common/src/target.c ****     PINSEL9 = 0x00000000;
 103              		.loc 1 57 0
 104 0024 C361     		str	r3, [r0, #28]
  58:lib/Common/src/target.c ****    PINSEL10 = 0x00000000;
 105              		.loc 1 58 0
 106 0026 0362     		str	r3, [r0, #32]
 107              		.loc 1 60 0
 108 0028 1360     		str	r3, [r2]
  61:lib/Common/src/target.c ****      IODIR1 = 0x00000000;
 109              		.loc 1 61 0
 110 002a 1361     		str	r3, [r2, #16]
  62:lib/Common/src/target.c ****      IOSET0 = 0x00000000;
 111              		.loc 1 62 0
 112 002c 043A     		sub	r2, r2, #4
 113 002e 1360     		str	r3, [r2]
  63:lib/Common/src/target.c ****      IOSET1 = 0x00000000;
  64:lib/Common/src/target.c ****     
  65:lib/Common/src/target.c ****     FIO0DIR = 0x00000000;
  66:lib/Common/src/target.c ****     FIO1DIR = 0x00000000;
  67:lib/Common/src/target.c ****     FIO2DIR = 0x00000201;
 114              		.loc 1 67 0
 115 0030 1448     		ldr	r0, .L5+16
  63:lib/Common/src/target.c ****      IOSET1 = 0x00000000;
 116              		.loc 1 63 0
 117 0032 1361     		str	r3, [r2, #16]
  65:lib/Common/src/target.c ****     FIO0DIR = 0x00000000;
 118              		.loc 1 65 0
 119 0034 144A     		ldr	r2, .L5+20
  68:lib/Common/src/target.c ****     FIO3DIR = 0x00000000;
  69:lib/Common/src/target.c ****     FIO4DIR = 0x0000FFFF;
 120              		.loc 1 69 0
 121 0036 1549     		ldr	r1, .L5+24
  65:lib/Common/src/target.c ****     FIO0DIR = 0x00000000;
 122              		.loc 1 65 0
 123 0038 1360     		str	r3, [r2]
  66:lib/Common/src/target.c ****     FIO1DIR = 0x00000000;
 124              		.loc 1 66 0
 125 003a 1362     		str	r3, [r2, #32]
  67:lib/Common/src/target.c ****     FIO2DIR = 0x00000201;
 126              		.loc 1 67 0
 127 003c 1064     		str	r0, [r2, #64]
  68:lib/Common/src/target.c ****     FIO3DIR = 0x00000000;
 128              		.loc 1 68 0
 129 003e 1366     		str	r3, [r2, #96]
  66:lib/Common/src/target.c ****     FIO1DIR = 0x00000000;
 130              		.loc 1 66 0
 131 0040 2032     		add	r2, r2, #32
 132              		.loc 1 69 0
 133 0042 1166     		str	r1, [r2, #96]
  70:lib/Common/src/target.c ****     
  71:lib/Common/src/target.c **** 	FIO0MASK = 0x00000000;
 134              		.loc 1 71 0
 135 0044 103A     		sub	r2, r2, #16
 136 0046 1360     		str	r3, [r2]
  72:lib/Common/src/target.c **** 	FIO0PIN = 0x00000000;
 137              		.loc 1 72 0
 138 0048 5360     		str	r3, [r2, #4]
  73:lib/Common/src/target.c **** 	FIO0SET = 0x00000000;
 139              		.loc 1 73 0
 140 004a 9360     		str	r3, [r2, #8]
  74:lib/Common/src/target.c **** 	FIO0CLR = 0x00000000;
 141              		.loc 1 74 0
 142 004c D360     		str	r3, [r2, #12]
  75:lib/Common/src/target.c **** 	
  76:lib/Common/src/target.c **** 	FIO1MASK = 0x00000000;
 143              		.loc 1 76 0
 144 004e 2032     		add	r2, r2, #32
 145 0050 1360     		str	r3, [r2]
  77:lib/Common/src/target.c **** 	FIO1PIN = 0x00000000;
  78:lib/Common/src/target.c **** 	FIO1SET = 0x00000000;
  79:lib/Common/src/target.c **** 	FIO1CLR = 0x00000000;
  80:lib/Common/src/target.c **** 	
  81:lib/Common/src/target.c **** 	FIO2MASK = 0x00000000;
  82:lib/Common/src/target.c **** 	FIO2PIN = 0x00000000;
  83:lib/Common/src/target.c **** 	FIO2SET = 0x00000000;
  84:lib/Common/src/target.c **** 	FIO2CLR = 0x00000000;
  85:lib/Common/src/target.c **** 
  86:lib/Common/src/target.c **** 	FIO3MASK = 0x00000000;
  87:lib/Common/src/target.c **** 	FIO3PIN = 0x00000000;
  88:lib/Common/src/target.c **** 	FIO3SET = 0x00000000;
  89:lib/Common/src/target.c **** 	FIO3CLR = 0x00000000;
  90:lib/Common/src/target.c **** 	
  91:lib/Common/src/target.c **** 	FIO4MASK = 0x00000000;
  92:lib/Common/src/target.c **** 	FIO4PIN = 0x00000000;
  93:lib/Common/src/target.c **** 	FIO4SET = 0x00000000;
  94:lib/Common/src/target.c **** 	FIO4CLR = 0x00000000;
  95:lib/Common/src/target.c **** 	
  96:lib/Common/src/target.c ****     return;        
  97:lib/Common/src/target.c **** }
 146              		.loc 1 97 0
 147              		@ sp needed for prologue
  77:lib/Common/src/target.c **** 	FIO1PIN = 0x00000000;
 148              		.loc 1 77 0
 149 0052 5360     		str	r3, [r2, #4]
  78:lib/Common/src/target.c **** 	FIO1SET = 0x00000000;
 150              		.loc 1 78 0
 151 0054 9360     		str	r3, [r2, #8]
  79:lib/Common/src/target.c **** 	FIO1CLR = 0x00000000;
 152              		.loc 1 79 0
 153 0056 D360     		str	r3, [r2, #12]
  81:lib/Common/src/target.c **** 	FIO2MASK = 0x00000000;
 154              		.loc 1 81 0
 155 0058 1362     		str	r3, [r2, #32]
  82:lib/Common/src/target.c **** 	FIO2PIN = 0x00000000;
 156              		.loc 1 82 0
 157 005a 5362     		str	r3, [r2, #36]
  83:lib/Common/src/target.c **** 	FIO2SET = 0x00000000;
 158              		.loc 1 83 0
 159 005c 9362     		str	r3, [r2, #40]
  84:lib/Common/src/target.c **** 	FIO2CLR = 0x00000000;
 160              		.loc 1 84 0
 161 005e D362     		str	r3, [r2, #44]
  86:lib/Common/src/target.c **** 	FIO3MASK = 0x00000000;
 162              		.loc 1 86 0
 163 0060 1364     		str	r3, [r2, #64]
  87:lib/Common/src/target.c **** 	FIO3PIN = 0x00000000;
 164              		.loc 1 87 0
 165 0062 5364     		str	r3, [r2, #68]
  88:lib/Common/src/target.c **** 	FIO3SET = 0x00000000;
 166              		.loc 1 88 0
 167 0064 9364     		str	r3, [r2, #72]
  89:lib/Common/src/target.c **** 	FIO3CLR = 0x00000000;
 168              		.loc 1 89 0
 169 0066 D364     		str	r3, [r2, #76]
  91:lib/Common/src/target.c **** 	FIO4MASK = 0x00000000;
 170              		.loc 1 91 0
 171 0068 1366     		str	r3, [r2, #96]
  92:lib/Common/src/target.c **** 	FIO4PIN = 0x00000000;
 172              		.loc 1 92 0
 173 006a 5366     		str	r3, [r2, #100]
  93:lib/Common/src/target.c **** 	FIO4SET = 0x00000000;
 174              		.loc 1 93 0
 175 006c 9366     		str	r3, [r2, #104]
  94:lib/Common/src/target.c **** 	FIO4CLR = 0x00000000;
 176              		.loc 1 94 0
 177 006e D366     		str	r3, [r2, #108]
 178              		.loc 1 97 0
 179 0070 7047     		bx	lr
 180              	.L6:
 181 0072 C046     		.align	2
 182              	.L5:
 183 0074 00C002E0 		.word	-536690688
 184 0078 5000A00F 		.word	262144080
 185 007c 08C002E0 		.word	-536690680
 186 0080 088002E0 		.word	-536707064
 187 0084 01020000 		.word	513
 188 0088 00C0FF3F 		.word	1073725440
 189 008c FFFF0000 		.word	65535
 190              		.cfi_endproc
 191              	.LFE1:
 193              		.section	.text.ConfigurePLL,"ax",%progbits
 194              		.align	2
 195              		.global	ConfigurePLL
 196              		.code	16
 197              		.thumb_func
 199              	ConfigurePLL:
 200              	.LFB2:
  98:lib/Common/src/target.c **** 
  99:lib/Common/src/target.c **** /******************************************************************************
 100:lib/Common/src/target.c **** ** Function name:		ConfigurePLL
 101:lib/Common/src/target.c **** **
 102:lib/Common/src/target.c **** ** Descriptions:		Configure PLL switching to main OSC instead of IRC
 103:lib/Common/src/target.c **** **						at power up and wake up from power down. 
 104:lib/Common/src/target.c **** **						This routine is used in TargetResetInit() and those
 105:lib/Common/src/target.c **** **						examples using power down and wake up such as
 106:lib/Common/src/target.c **** **						USB suspend to resume, ethernet WOL, and power management
 107:lib/Common/src/target.c **** **						example
 108:lib/Common/src/target.c **** ** parameters:			None
 109:lib/Common/src/target.c **** ** Returned value:		None
 110:lib/Common/src/target.c **** ** 
 111:lib/Common/src/target.c **** ******************************************************************************/
 112:lib/Common/src/target.c **** void ConfigurePLL ( void )
 113:lib/Common/src/target.c **** {
 201              		.loc 1 113 0
 202              		.cfi_startproc
 203 0000 10B5     		push	{r4, lr}
 204              	.LCFI1:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
 114:lib/Common/src/target.c **** 	DWORD MValue, NValue;
 115:lib/Common/src/target.c **** 
 116:lib/Common/src/target.c **** 	if ( PLLSTAT & (1 << 25) )
 208              		.loc 1 116 0
 209 0002 2948     		ldr	r0, .L22
 210 0004 0368     		ldr	r3, [r0]
 211 0006 9A01     		lsl	r2, r3, #6
 212 0008 06D5     		bpl	.L8
 117:lib/Common/src/target.c ****     {
 118:lib/Common/src/target.c **** 		PLLCON = 1;			/* Enable PLL, disconnected */
 213              		.loc 1 118 0
 214 000a 2849     		ldr	r1, .L22+4
 215 000c 0122     		mov	r2, #1
 216 000e 0A60     		str	r2, [r1]
 119:lib/Common/src/target.c **** 	 	PLLFEED = 0xaa;
 217              		.loc 1 119 0
 218 0010 A932     		add	r2, r2, #169
 219 0012 CA60     		str	r2, [r1, #12]
 120:lib/Common/src/target.c **** 		PLLFEED = 0x55;
 220              		.loc 1 120 0
 221 0014 553A     		sub	r2, r2, #85
 222 0016 CA60     		str	r2, [r1, #12]
 223              	.L8:
 121:lib/Common/src/target.c ****     }
 122:lib/Common/src/target.c **** 
 123:lib/Common/src/target.c ****     PLLCON = 0;				/* Disable PLL, disconnected */
 224              		.loc 1 123 0
 225 0018 244B     		ldr	r3, .L22+4
 226 001a 0022     		mov	r2, #0
 227 001c 1A60     		str	r2, [r3]
 124:lib/Common/src/target.c ****     PLLFEED = 0xaa;
 228              		.loc 1 124 0
 229 001e AA32     		add	r2, r2, #170
 230 0020 DA60     		str	r2, [r3, #12]
 125:lib/Common/src/target.c ****     PLLFEED = 0x55;
 231              		.loc 1 125 0
 232 0022 553A     		sub	r2, r2, #85
 233 0024 DA60     		str	r2, [r3, #12]
 126:lib/Common/src/target.c ****     
 127:lib/Common/src/target.c **** 	SCS |= 0x20;			/* Enable main OSC */
 234              		.loc 1 127 0
 235 0026 2249     		ldr	r1, .L22+8
 236 0028 0C68     		ldr	r4, [r1]
 237 002a 353A     		sub	r2, r2, #53
 238 002c 1443     		orr	r4, r4, r2
 239 002e 0C60     		str	r4, [r1]
 128:lib/Common/src/target.c ****     while( !(SCS & 0x40) );	/* Wait until main OSC is usable */
 240              		.loc 1 128 0
 241 0030 2032     		add	r2, r2, #32
 242              	.L9:
 243              		.loc 1 128 0 is_stmt 0 discriminator 1
 244 0032 0868     		ldr	r0, [r1]
 245 0034 1042     		tst	r0, r2
 246 0036 FCD0     		beq	.L9
 129:lib/Common/src/target.c **** 
 130:lib/Common/src/target.c ****     CLKSRCSEL = 0x1;		/* select main OSC, 12MHz, as the PLL clock source */
 247              		.loc 1 130 0 is_stmt 1
 248 0038 1E4B     		ldr	r3, .L22+12
 249 003a 0120     		mov	r0, #1
 250 003c 1860     		str	r0, [r3]
 131:lib/Common/src/target.c **** 	
 132:lib/Common/src/target.c **** 		  
 133:lib/Common/src/target.c **** 	PLLCFG = (PLL_NValue << 16) | PLL_MValue ;
 251              		.loc 1 133 0
 252 003e 0B22     		mov	r2, #11
 253 0040 883B     		sub	r3, r3, #136
 134:lib/Common/src/target.c **** 	PLLFEED = 0xAA;
 135:lib/Common/src/target.c **** 	PLLFEED = 0x55;
 136:lib/Common/src/target.c **** 	PLLCON = 1;				/* Enable PLL */
 254              		.loc 1 136 0
 255 0042 1A4C     		ldr	r4, .L22+4
 133:lib/Common/src/target.c **** 	PLLCFG = (PLL_NValue << 16) | PLL_MValue ;
 256              		.loc 1 133 0
 257 0044 1A60     		str	r2, [r3]
 134:lib/Common/src/target.c **** 	PLLFEED = 0xAA;
 258              		.loc 1 134 0
 259 0046 AA21     		mov	r1, #170
 135:lib/Common/src/target.c **** 	PLLFEED = 0x55;
 260              		.loc 1 135 0
 261 0048 4A32     		add	r2, r2, #74
 134:lib/Common/src/target.c **** 	PLLFEED = 0xAA;
 262              		.loc 1 134 0
 263 004a 9960     		str	r1, [r3, #8]
 135:lib/Common/src/target.c **** 	PLLFEED = 0x55;
 264              		.loc 1 135 0
 265 004c 9A60     		str	r2, [r3, #8]
 266              		.loc 1 136 0
 267 004e 2060     		str	r0, [r4]
 137:lib/Common/src/target.c **** 	PLLFEED = 0xAA;
 268              		.loc 1 137 0
 269 0050 9960     		str	r1, [r3, #8]
 138:lib/Common/src/target.c **** 	PLLFEED = 0x55;
 270              		.loc 1 138 0
 271 0052 9A60     		str	r2, [r3, #8]
 134:lib/Common/src/target.c **** 	PLLFEED = 0xAA;
 272              		.loc 1 134 0
 273 0054 0833     		add	r3, r3, #8
 139:lib/Common/src/target.c **** 	
 140:lib/Common/src/target.c **** 
 141:lib/Common/src/target.c ****     CCLKCFG = CCLKDivValue;	        /* Fcore = 72 MHz */
 274              		.loc 1 141 0
 275 0056 523A     		sub	r2, r2, #82
 276 0058 9A67     		str	r2, [r3, #120]
 142:lib/Common/src/target.c **** #if USE_USB
 143:lib/Common/src/target.c ****     USBCLKCFG = USBCLKDivValue;		/* usbclk = 48 MHz */
 277              		.loc 1 143 0
 278 005a 0232     		add	r2, r2, #2
 144:lib/Common/src/target.c **** #endif
 145:lib/Common/src/target.c **** 
 146:lib/Common/src/target.c ****     while ( ((PLLSTAT & (1 << 26)) == 0) );	/* Check lock bit status */
 279              		.loc 1 146 0
 280 005c 2A39     		sub	r1, r1, #42
 143:lib/Common/src/target.c ****     USBCLKCFG = USBCLKDivValue;		/* usbclk = 48 MHz */
 281              		.loc 1 143 0
 282 005e DA67     		str	r2, [r3, #124]
 283              		.loc 1 146 0
 284 0060 1148     		ldr	r0, .L22
 285 0062 C904     		lsl	r1, r1, #19
 286              	.L10:
 287              		.loc 1 146 0 is_stmt 0 discriminator 1
 288 0064 0368     		ldr	r3, [r0]
 289 0066 104A     		ldr	r2, .L22
 290 0068 0B42     		tst	r3, r1
 291 006a FBD0     		beq	.L10
 147:lib/Common/src/target.c ****     
 148:lib/Common/src/target.c ****     MValue = PLLSTAT & 0x00007FFF;
 292              		.loc 1 148 0 is_stmt 1
 293 006c 1368     		ldr	r3, [r2]
 294              	.LVL0:
 149:lib/Common/src/target.c ****     NValue = (PLLSTAT & 0x00FF0000) >> 16;
 295              		.loc 1 149 0
 296 006e 1468     		ldr	r4, [r2]
 297              	.LVL1:
 148:lib/Common/src/target.c ****     MValue = PLLSTAT & 0x00007FFF;
 298              		.loc 1 148 0
 299 0070 5A04     		lsl	r2, r3, #17
 300 0072 520C     		lsr	r2, r2, #17
 301              		.loc 1 149 0
 302 0074 0B3A     		sub	r2, r2, #11
 303 0076 2002     		lsl	r0, r4, #8
 304 0078 511E     		sub	r1, r2, #1
 305 007a 8A41     		sbc	r2, r2, r1
 306 007c 010E     		lsr	r1, r0, #24
 150:lib/Common/src/target.c ****     while ((MValue != PLL_MValue) && ( NValue != PLL_NValue) );
 307              		.loc 1 150 0
 308 007e 0029     		cmp	r1, #0
 309 0080 0FD1     		bne	.L21
 310              	.L14:
 151:lib/Common/src/target.c **** 
 152:lib/Common/src/target.c ****     PLLCON = 3;				/* enable and connect */
 311              		.loc 1 152 0
 312 0082 0A49     		ldr	r1, .L22+4
 313 0084 0320     		mov	r0, #3
 314 0086 0860     		str	r0, [r1]
 153:lib/Common/src/target.c ****     PLLFEED = 0xaa;
 315              		.loc 1 153 0
 316 0088 A730     		add	r0, r0, #167
 317 008a C860     		str	r0, [r1, #12]
 154:lib/Common/src/target.c ****     PLLFEED = 0x55;
 318              		.loc 1 154 0
 319 008c 5538     		sub	r0, r0, #85
 320 008e C860     		str	r0, [r1, #12]
 155:lib/Common/src/target.c **** 	while ( ((PLLSTAT & (1 << 25)) == 0) );	/* Check connect bit status */
 321              		.loc 1 155 0
 322 0090 2B30     		add	r0, r0, #43
 323 0092 0549     		ldr	r1, .L22
 324 0094 8204     		lsl	r2, r0, #18
 325              	.LVL2:
 326              	.L13:
 327              		.loc 1 155 0 is_stmt 0 discriminator 1
 328 0096 0C68     		ldr	r4, [r1]
 329 0098 1442     		tst	r4, r2
 330 009a FCD0     		beq	.L13
 156:lib/Common/src/target.c **** 
 157:lib/Common/src/target.c **** 
 158:lib/Common/src/target.c **** 	return;
 159:lib/Common/src/target.c **** }
 331              		.loc 1 159 0 is_stmt 1
 332              		@ sp needed for prologue
 333 009c 10BC     		pop	{r4}
 334 009e 01BC     		pop	{r0}
 335 00a0 0047     		bx	r0
 336              	.LVL3:
 337              	.L21:
 150:lib/Common/src/target.c ****     while ((MValue != PLL_MValue) && ( NValue != PLL_NValue) );
 338              		.loc 1 150 0
 339 00a2 002A     		cmp	r2, #0
 340 00a4 EDD0     		beq	.L14
 341              	.L19:
 342 00a6 FEE7     		b	.L19
 343              	.L23:
 344              		.align	2
 345              	.L22:
 346 00a8 88C01FE0 		.word	-534790008
 347 00ac 80C01FE0 		.word	-534790016
 348 00b0 A0C11FE0 		.word	-534789728
 349 00b4 0CC11FE0 		.word	-534789876
 350              		.cfi_endproc
 351              	.LFE2:
 353              		.section	.text.TargetResetInit,"ax",%progbits
 354              		.align	2
 355              		.global	TargetResetInit
 356              		.code	16
 357              		.thumb_func
 359              	TargetResetInit:
 360              	.LFB3:
 160:lib/Common/src/target.c **** 
 161:lib/Common/src/target.c **** /******************************************************************************
 162:lib/Common/src/target.c **** ** Function name:		TargetResetInit
 163:lib/Common/src/target.c **** **
 164:lib/Common/src/target.c **** ** Descriptions:		Initialize the target board before running the main() 
 165:lib/Common/src/target.c **** **						function; User may change it as needed, but may not 
 166:lib/Common/src/target.c **** **						deleted it.
 167:lib/Common/src/target.c **** **
 168:lib/Common/src/target.c **** ** parameters:			None
 169:lib/Common/src/target.c **** ** Returned value:		None
 170:lib/Common/src/target.c **** ** 
 171:lib/Common/src/target.c **** ******************************************************************************/
 172:lib/Common/src/target.c **** void TargetResetInit(void)
 173:lib/Common/src/target.c **** {
 361              		.loc 1 173 0
 362              		.cfi_startproc
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI2:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 174:lib/Common/src/target.c **** 
 175:lib/Common/src/target.c **** // mthomas
 176:lib/Common/src/target.c **** #if 0
 177:lib/Common/src/target.c **** #ifdef __DEBUG_RAM    
 178:lib/Common/src/target.c ****     MEMMAP = 0x2;			/* remap to internal RAM */
 179:lib/Common/src/target.c **** #endif
 180:lib/Common/src/target.c **** 
 181:lib/Common/src/target.c **** #ifdef __DEBUG_FLASH    
 182:lib/Common/src/target.c ****     MEMMAP = 0x1;			/* remap to internal flash */
 183:lib/Common/src/target.c **** #endif
 184:lib/Common/src/target.c **** #endif
 185:lib/Common/src/target.c **** 
 186:lib/Common/src/target.c **** #ifdef __DEBUG_RAM    
 187:lib/Common/src/target.c ****     MEMMAP = 0x2;			/* remap to internal RAM */
 188:lib/Common/src/target.c **** #else
 189:lib/Common/src/target.c ****     MEMMAP = 0x1;			/* remap to internal flash */
 368              		.loc 1 189 0
 369 0002 0F4B     		ldr	r3, .L25
 370 0004 0122     		mov	r2, #1
 371 0006 1A60     		str	r2, [r3]
 190:lib/Common/src/target.c **** #endif 
 191:lib/Common/src/target.c **** 
 192:lib/Common/src/target.c **** 
 193:lib/Common/src/target.c **** #if USE_USB
 194:lib/Common/src/target.c **** 	PCONP |= 0x80000000;		/* Turn On USB PCLK */
 372              		.loc 1 194 0
 373 0008 8433     		add	r3, r3, #132
 374 000a 1968     		ldr	r1, [r3]
 375 000c 7F32     		add	r2, r2, #127
 376 000e 1006     		lsl	r0, r2, #24
 377 0010 0843     		orr	r0, r0, r1
 378 0012 1860     		str	r0, [r3]
 195:lib/Common/src/target.c **** #endif
 196:lib/Common/src/target.c **** 	/* Configure PLL, switch from IRC to Main OSC */
 197:lib/Common/src/target.c **** 	ConfigurePLL();
 379              		.loc 1 197 0
 380 0014 FFF7FEFF 		bl	ConfigurePLL
 198:lib/Common/src/target.c **** 
 199:lib/Common/src/target.c ****   /* Set system timers for each component */
 200:lib/Common/src/target.c **** #if (Fpclk / (Fcclk / 4)) == 1
 201:lib/Common/src/target.c ****     PCLKSEL0 = 0x00000000;	/* PCLK is 1/4 CCLK */
 202:lib/Common/src/target.c ****     PCLKSEL1 = 0x00000000;
 203:lib/Common/src/target.c **** #endif
 204:lib/Common/src/target.c **** #if (Fpclk / (Fcclk / 4)) == 2
 205:lib/Common/src/target.c ****     PCLKSEL0 = 0xAAAAAAAA;	/* PCLK is 1/2 CCLK */
 381              		.loc 1 205 0
 382 0018 0A4B     		ldr	r3, .L25+4
 383 001a 0B49     		ldr	r1, .L25+8
 384 001c 0B60     		str	r3, [r1]
 206:lib/Common/src/target.c ****     PCLKSEL1 = 0xAAAAAAAA;	 
 385              		.loc 1 206 0
 386 001e 4B60     		str	r3, [r1, #4]
 207:lib/Common/src/target.c **** #endif
 208:lib/Common/src/target.c **** #if (Fpclk / (Fcclk / 4)) == 4
 209:lib/Common/src/target.c ****     PCLKSEL0 = 0x55555555;	/* PCLK is the same as CCLK */
 210:lib/Common/src/target.c ****     PCLKSEL1 = 0x55555555;	
 211:lib/Common/src/target.c **** #endif
 212:lib/Common/src/target.c **** 
 213:lib/Common/src/target.c ****     /* Set memory accelerater module*/
 214:lib/Common/src/target.c ****     MAMCR = 0;
 387              		.loc 1 214 0
 388 0020 0A4B     		ldr	r3, .L25+12
 215:lib/Common/src/target.c **** #if Fcclk < 20000000
 216:lib/Common/src/target.c ****     MAMTIM = 1;
 217:lib/Common/src/target.c **** #else
 218:lib/Common/src/target.c **** #if Fcclk < 40000000
 219:lib/Common/src/target.c ****     MAMTIM = 2;
 220:lib/Common/src/target.c **** #else
 221:lib/Common/src/target.c ****     MAMTIM = 3;
 389              		.loc 1 221 0
 390 0022 0B48     		ldr	r0, .L25+16
 214:lib/Common/src/target.c ****     MAMCR = 0;
 391              		.loc 1 214 0
 392 0024 0022     		mov	r2, #0
 393 0026 1A60     		str	r2, [r3]
 394              		.loc 1 221 0
 395 0028 0321     		mov	r1, #3
 222:lib/Common/src/target.c **** #endif
 223:lib/Common/src/target.c **** #endif
 224:lib/Common/src/target.c ****     MAMCR = 2;
 396              		.loc 1 224 0
 397 002a 0222     		mov	r2, #2
 221:lib/Common/src/target.c ****     MAMTIM = 3;
 398              		.loc 1 221 0
 399 002c 0160     		str	r1, [r0]
 400              		.loc 1 224 0
 401 002e 1A60     		str	r2, [r3]
 225:lib/Common/src/target.c **** 	
 226:lib/Common/src/target.c **** 	init_VIC();
 402              		.loc 1 226 0
 403 0030 FFF7FEFF 		bl	init_VIC
 227:lib/Common/src/target.c **** 	
 228:lib/Common/src/target.c **** 	TargetInit();
 229:lib/Common/src/target.c **** 	
 230:lib/Common/src/target.c ****     return;
 231:lib/Common/src/target.c **** }
 404              		.loc 1 231 0
 405              		@ sp needed for prologue
 228:lib/Common/src/target.c **** 	TargetInit();
 406              		.loc 1 228 0
 407 0034 FFF7FEFF 		bl	TargetInit
 408              		.loc 1 231 0
 409 0038 08BC     		pop	{r3}
 410 003a 01BC     		pop	{r0}
 411 003c 0047     		bx	r0
 412              	.L26:
 413 003e C046     		.align	2
 414              	.L25:
 415 0040 40C01FE0 		.word	-534790080
 416 0044 AAAAAAAA 		.word	-1431655766
 417 0048 A8C11FE0 		.word	-534789720
 418 004c 00C01FE0 		.word	-534790144
 419 0050 04C01FE0 		.word	-534790140
 420              		.cfi_endproc
 421              	.LFE3:
 423              		.text
 424              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 target.c
     /tmp/cc0RT85T.s:23     .text.TargetInit:00000000 $t
     /tmp/cc0RT85T.s:28     .text.TargetInit:00000000 TargetInit
     /tmp/cc0RT85T.s:55     .text.TargetInit:00000018 $d
     /tmp/cc0RT85T.s:60     .text.GPIOResetInit:00000000 $t
     /tmp/cc0RT85T.s:65     .text.GPIOResetInit:00000000 GPIOResetInit
     /tmp/cc0RT85T.s:183    .text.GPIOResetInit:00000074 $d
     /tmp/cc0RT85T.s:194    .text.ConfigurePLL:00000000 $t
     /tmp/cc0RT85T.s:199    .text.ConfigurePLL:00000000 ConfigurePLL
     /tmp/cc0RT85T.s:346    .text.ConfigurePLL:000000a8 $d
     /tmp/cc0RT85T.s:354    .text.TargetResetInit:00000000 $t
     /tmp/cc0RT85T.s:359    .text.TargetResetInit:00000000 TargetResetInit
     /tmp/cc0RT85T.s:415    .text.TargetResetInit:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
i2enable
init_VIC
